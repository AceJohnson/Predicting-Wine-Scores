{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn import metrics\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.metrics import mean_squared_error\n",
    "from math import sqrt\n",
    "from sklearn import metrics\n",
    "pd.set_option('display.max_columns', 500)\n",
    "pd.set_option('display.max_rows', 500)\n",
    "pd.set_option('max_colwidth', 500)\n",
    "\n",
    "\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "train= pd.read_csv('./winemag-data-130k-v2.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(129971, 14)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Unnamed: 0                   0\n",
       "country                     63\n",
       "description                  0\n",
       "designation              37465\n",
       "points                       0\n",
       "price                     8996\n",
       "province                    63\n",
       "region_1                 21247\n",
       "region_2                 79460\n",
       "taster_name              26244\n",
       "taster_twitter_handle    31213\n",
       "title                        0\n",
       "variety                      1\n",
       "winery                       0\n",
       "country_simple               0\n",
       "province_simple              0\n",
       "region_simple                0\n",
       "variety_simple               0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Price has 8,000 NaN values \n",
    "train.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 204,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>points</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>129971.000000</td>\n",
       "      <td>129971.000000</td>\n",
       "      <td>120975.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>64985.000000</td>\n",
       "      <td>88.447138</td>\n",
       "      <td>35.363389</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>37519.540256</td>\n",
       "      <td>3.039730</td>\n",
       "      <td>41.022218</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>4.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>32492.500000</td>\n",
       "      <td>86.000000</td>\n",
       "      <td>17.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>64985.000000</td>\n",
       "      <td>88.000000</td>\n",
       "      <td>25.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>97477.500000</td>\n",
       "      <td>91.000000</td>\n",
       "      <td>42.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>129970.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>3300.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Unnamed: 0         points          price\n",
       "count  129971.000000  129971.000000  120975.000000\n",
       "mean    64985.000000      88.447138      35.363389\n",
       "std     37519.540256       3.039730      41.022218\n",
       "min         0.000000      80.000000       4.000000\n",
       "25%     32492.500000      86.000000      17.000000\n",
       "50%     64985.000000      88.000000      25.000000\n",
       "75%     97477.500000      91.000000      42.000000\n",
       "max    129970.000000     100.000000    3300.000000"
      ]
     },
     "execution_count": 204,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Null Prediction is the mean of points 88. Mean price is $35 will likely dropna the NaN price values\n",
    "train.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 217,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (12,8))\n",
    "plt.xticks(list(range(80,101)))\n",
    "#plt.yticks(list(range(80,101)))\n",
    "plt.xlabel('Points', fontsize = 30)\n",
    "plt.ylabel('Price', fontsize = 30)\n",
    "plt.scatter(train.points,train.price,alpha=0.5)\n",
    "plt.grid()\n",
    "plt.title('Linear Relationship of Points and Price')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 219,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a1f18c6a0>"
      ]
     },
     "execution_count": 219,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "train.points.plot(kind='hist',bins = 20,grid=True,title='Point Distribution',figsize = (12,8),xticks=list(range(80,101)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Null prediction of .13"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [],
   "source": [
    "mean_points=train[train['points']==88]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.13239107185449062"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mean_points.shape[0] / len(train) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "17207"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mean_points.shape[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# COUNTRY"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Country: Value Check"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "US              54504\n",
       "France          22093\n",
       "Italy           19540\n",
       "Spain            6645\n",
       "Portugal         5691\n",
       "Chile            4472\n",
       "Argentina        3800\n",
       "Austria          3345\n",
       "Australia        2329\n",
       "Germany          2165\n",
       "New Zealand      1419\n",
       "South Africa     1401\n",
       "Israel            505\n",
       "Name: country, dtype: int64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Took top 12 countries due to a 900 value count drop from 12th to the 13th country. \n",
    "train['country'].value_counts()[:13]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Country: Function and loop for dummies"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "#First 12 rows for the top/significant country value counts\n",
    "country = list(train.country.value_counts()[:12].index)\n",
    "def country_to_simple(x,country):\n",
    "    if x in country:\n",
    "        return x\n",
    "    else: \n",
    "        return 'Other'\n",
    "train['country_simple'] = train.country.apply(lambda x: country_to_simple(x,country))\n",
    "dummy_country = pd.get_dummies(train.country_simple,prefix = 'country_')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Country: Mean ( ) points"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>points</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>country_simple</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Austria</th>\n",
       "      <td>90.101345</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Germany</th>\n",
       "      <td>89.851732</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>France</th>\n",
       "      <td>88.845109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Australia</th>\n",
       "      <td>88.580507</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>US</th>\n",
       "      <td>88.563720</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Italy</th>\n",
       "      <td>88.562231</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>New Zealand</th>\n",
       "      <td>88.303030</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Portugal</th>\n",
       "      <td>88.250220</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>South Africa</th>\n",
       "      <td>88.056388</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Other</th>\n",
       "      <td>87.913128</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Spain</th>\n",
       "      <td>87.288337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Argentina</th>\n",
       "      <td>86.710263</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chile</th>\n",
       "      <td>86.493515</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   points\n",
       "country_simple           \n",
       "Austria         90.101345\n",
       "Germany         89.851732\n",
       "France          88.845109\n",
       "Australia       88.580507\n",
       "US              88.563720\n",
       "Italy           88.562231\n",
       "New Zealand     88.303030\n",
       "Portugal        88.250220\n",
       "South Africa    88.056388\n",
       "Other           87.913128\n",
       "Spain           87.288337\n",
       "Argentina       86.710263\n",
       "Chile           86.493515"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train[['points','country_simple']].groupby('country_simple').mean().sort_values(by = 'points',ascending = False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Country: Dummy DF"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country__Argentina</th>\n",
       "      <th>country__Australia</th>\n",
       "      <th>country__Austria</th>\n",
       "      <th>country__Chile</th>\n",
       "      <th>country__France</th>\n",
       "      <th>country__Germany</th>\n",
       "      <th>country__Italy</th>\n",
       "      <th>country__New Zealand</th>\n",
       "      <th>country__Other</th>\n",
       "      <th>country__Portugal</th>\n",
       "      <th>country__South Africa</th>\n",
       "      <th>country__Spain</th>\n",
       "      <th>country__US</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   country__Argentina  country__Australia  country__Austria  country__Chile  \\\n",
       "0                   0                   0                 0               0   \n",
       "1                   0                   0                 0               0   \n",
       "2                   0                   0                 0               0   \n",
       "3                   0                   0                 0               0   \n",
       "4                   0                   0                 0               0   \n",
       "\n",
       "   country__France  country__Germany  country__Italy  country__New Zealand  \\\n",
       "0                0                 0               1                     0   \n",
       "1                0                 0               0                     0   \n",
       "2                0                 0               0                     0   \n",
       "3                0                 0               0                     0   \n",
       "4                0                 0               0                     0   \n",
       "\n",
       "   country__Other  country__Portugal  country__South Africa  country__Spain  \\\n",
       "0               0                  0                      0               0   \n",
       "1               0                  1                      0               0   \n",
       "2               0                  0                      0               0   \n",
       "3               0                  0                      0               0   \n",
       "4               0                  0                      0               0   \n",
       "\n",
       "   country__US  \n",
       "0            0  \n",
       "1            0  \n",
       "2            1  \n",
       "3            1  \n",
       "4            1  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dummy_country.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# PROVINCE"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Province: Value Check"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "California            36247\n",
       "Washington             8639\n",
       "Bordeaux               5941\n",
       "Tuscany                5897\n",
       "Oregon                 5373\n",
       "Burgundy               3980\n",
       "Northern Spain         3851\n",
       "Piedmont               3729\n",
       "Mendoza Province       3264\n",
       "Veneto                 2716\n",
       "New York               2688\n",
       "Alsace                 2440\n",
       "Northeastern Italy     2138\n",
       "Loire Valley           1856\n",
       "Sicily & Sardinia      1797\n",
       "Champagne              1613\n",
       "Southwest France       1503\n",
       "South Australia        1349\n",
       "Southern Italy         1349\n",
       "Provence               1346\n",
       "Douro                  1281\n",
       "Central Italy          1233\n",
       "Catalonia              1164\n",
       "Rhône Valley           1081\n",
       "Beaujolais             1044\n",
       "Mosel                  1039\n",
       "Alentejano              937\n",
       "Colchagua Valley        830\n",
       "Marlborough             798\n",
       "Virginia                777\n",
       "Name: province, dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#I chose 30 as a seudo arbitraty number but it happens to lastly include Virginia. A special wine country in my heart\n",
    "train['province'].value_counts()[:30]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Province: Function and loop for dummies"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "prov = list(train.province.value_counts()[:30].index)\n",
    "def prov_to_simple(x,prov):\n",
    "    if x in prov:\n",
    "        return x\n",
    "    else: \n",
    "        return 'Other'\n",
    "train['province_simple'] = train.province.apply(lambda x: prov_to_simple(x,prov))\n",
    "dummy_prov = pd.get_dummies(train.province_simple,prefix = 'province_')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Province: Mean ( ) points"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>points</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>province_simple</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Champagne</th>\n",
       "      <td>90.234966</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mosel</th>\n",
       "      <td>90.049086</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Burgundy</th>\n",
       "      <td>89.569347</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Piedmont</th>\n",
       "      <td>89.536873</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Alsace</th>\n",
       "      <td>89.372131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Douro</th>\n",
       "      <td>89.126464</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tuscany</th>\n",
       "      <td>89.074614</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Oregon</th>\n",
       "      <td>89.051926</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>South Australia</th>\n",
       "      <td>89.037806</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Rhône Valley</th>\n",
       "      <td>89.007401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Washington</th>\n",
       "      <td>88.947216</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bordeaux</th>\n",
       "      <td>88.658980</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>California</th>\n",
       "      <td>88.627776</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Southwest France</th>\n",
       "      <td>88.607452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Loire Valley</th>\n",
       "      <td>88.493534</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Provence</th>\n",
       "      <td>88.210253</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sicily &amp; Sardinia</th>\n",
       "      <td>88.109071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Northeastern Italy</th>\n",
       "      <td>87.995790</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Beaujolais</th>\n",
       "      <td>87.954981</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Alentejano</th>\n",
       "      <td>87.905016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Other</th>\n",
       "      <td>87.886367</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Marlborough</th>\n",
       "      <td>87.865915</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Southern Italy</th>\n",
       "      <td>87.838399</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Veneto</th>\n",
       "      <td>87.715022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Catalonia</th>\n",
       "      <td>87.452749</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Northern Spain</th>\n",
       "      <td>87.417035</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Central Italy</th>\n",
       "      <td>87.391727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>New York</th>\n",
       "      <td>87.178571</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Colchagua Valley</th>\n",
       "      <td>87.098795</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mendoza Province</th>\n",
       "      <td>86.826593</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Virginia</th>\n",
       "      <td>85.611326</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       points\n",
       "province_simple              \n",
       "Champagne           90.234966\n",
       "Mosel               90.049086\n",
       "Burgundy            89.569347\n",
       "Piedmont            89.536873\n",
       "Alsace              89.372131\n",
       "Douro               89.126464\n",
       "Tuscany             89.074614\n",
       "Oregon              89.051926\n",
       "South Australia     89.037806\n",
       "Rhône Valley        89.007401\n",
       "Washington          88.947216\n",
       "Bordeaux            88.658980\n",
       "California          88.627776\n",
       "Southwest France    88.607452\n",
       "Loire Valley        88.493534\n",
       "Provence            88.210253\n",
       "Sicily & Sardinia   88.109071\n",
       "Northeastern Italy  87.995790\n",
       "Beaujolais          87.954981\n",
       "Alentejano          87.905016\n",
       "Other               87.886367\n",
       "Marlborough         87.865915\n",
       "Southern Italy      87.838399\n",
       "Veneto              87.715022\n",
       "Catalonia           87.452749\n",
       "Northern Spain      87.417035\n",
       "Central Italy       87.391727\n",
       "New York            87.178571\n",
       "Colchagua Valley    87.098795\n",
       "Mendoza Province    86.826593\n",
       "Virginia            85.611326"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train[['points','province_simple']].groupby('province_simple').mean().sort_values(by = 'points',ascending = False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Province: Dummy DF"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>province__Alentejano</th>\n",
       "      <th>province__Alsace</th>\n",
       "      <th>province__Beaujolais</th>\n",
       "      <th>province__Bordeaux</th>\n",
       "      <th>province__Burgundy</th>\n",
       "      <th>province__California</th>\n",
       "      <th>province__Catalonia</th>\n",
       "      <th>province__Central Italy</th>\n",
       "      <th>province__Champagne</th>\n",
       "      <th>province__Colchagua Valley</th>\n",
       "      <th>province__Douro</th>\n",
       "      <th>province__Loire Valley</th>\n",
       "      <th>province__Marlborough</th>\n",
       "      <th>province__Mendoza Province</th>\n",
       "      <th>province__Mosel</th>\n",
       "      <th>province__New York</th>\n",
       "      <th>province__Northeastern Italy</th>\n",
       "      <th>province__Northern Spain</th>\n",
       "      <th>province__Oregon</th>\n",
       "      <th>province__Other</th>\n",
       "      <th>province__Piedmont</th>\n",
       "      <th>province__Provence</th>\n",
       "      <th>province__Rhône Valley</th>\n",
       "      <th>province__Sicily &amp; Sardinia</th>\n",
       "      <th>province__South Australia</th>\n",
       "      <th>province__Southern Italy</th>\n",
       "      <th>province__Southwest France</th>\n",
       "      <th>province__Tuscany</th>\n",
       "      <th>province__Veneto</th>\n",
       "      <th>province__Virginia</th>\n",
       "      <th>province__Washington</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   province__Alentejano  province__Alsace  province__Beaujolais  \\\n",
       "0                     0                 0                     0   \n",
       "1                     0                 0                     0   \n",
       "2                     0                 0                     0   \n",
       "3                     0                 0                     0   \n",
       "4                     0                 0                     0   \n",
       "\n",
       "   province__Bordeaux  province__Burgundy  province__California  \\\n",
       "0                   0                   0                     0   \n",
       "1                   0                   0                     0   \n",
       "2                   0                   0                     0   \n",
       "3                   0                   0                     0   \n",
       "4                   0                   0                     0   \n",
       "\n",
       "   province__Catalonia  province__Central Italy  province__Champagne  \\\n",
       "0                    0                        0                    0   \n",
       "1                    0                        0                    0   \n",
       "2                    0                        0                    0   \n",
       "3                    0                        0                    0   \n",
       "4                    0                        0                    0   \n",
       "\n",
       "   province__Colchagua Valley  province__Douro  province__Loire Valley  \\\n",
       "0                           0                0                       0   \n",
       "1                           0                1                       0   \n",
       "2                           0                0                       0   \n",
       "3                           0                0                       0   \n",
       "4                           0                0                       0   \n",
       "\n",
       "   province__Marlborough  province__Mendoza Province  province__Mosel  \\\n",
       "0                      0                           0                0   \n",
       "1                      0                           0                0   \n",
       "2                      0                           0                0   \n",
       "3                      0                           0                0   \n",
       "4                      0                           0                0   \n",
       "\n",
       "   province__New York  province__Northeastern Italy  province__Northern Spain  \\\n",
       "0                   0                             0                         0   \n",
       "1                   0                             0                         0   \n",
       "2                   0                             0                         0   \n",
       "3                   0                             0                         0   \n",
       "4                   0                             0                         0   \n",
       "\n",
       "   province__Oregon  province__Other  province__Piedmont  province__Provence  \\\n",
       "0                 0                0                   0                   0   \n",
       "1                 0                0                   0                   0   \n",
       "2                 1                0                   0                   0   \n",
       "3                 0                1                   0                   0   \n",
       "4                 1                0                   0                   0   \n",
       "\n",
       "   province__Rhône Valley  province__Sicily & Sardinia  \\\n",
       "0                       0                            1   \n",
       "1                       0                            0   \n",
       "2                       0                            0   \n",
       "3                       0                            0   \n",
       "4                       0                            0   \n",
       "\n",
       "   province__South Australia  province__Southern Italy  \\\n",
       "0                          0                         0   \n",
       "1                          0                         0   \n",
       "2                          0                         0   \n",
       "3                          0                         0   \n",
       "4                          0                         0   \n",
       "\n",
       "   province__Southwest France  province__Tuscany  province__Veneto  \\\n",
       "0                           0                  0                 0   \n",
       "1                           0                  0                 0   \n",
       "2                           0                  0                 0   \n",
       "3                           0                  0                 0   \n",
       "4                           0                  0                 0   \n",
       "\n",
       "   province__Virginia  province__Washington  \n",
       "0                   0                     0  \n",
       "1                   0                     0  \n",
       "2                   0                     0  \n",
       "3                   0                     0  \n",
       "4                   0                     0  "
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dummy_prov.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# REGION"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Region: Value counts"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Napa Valley                  4480\n",
       "Columbia Valley (WA)         4124\n",
       "Russian River Valley         3091\n",
       "California                   2629\n",
       "Paso Robles                  2350\n",
       "Willamette Valley            2301\n",
       "Mendoza                      2301\n",
       "Alsace                       2163\n",
       "Champagne                    1613\n",
       "Barolo                       1599\n",
       "Finger Lakes                 1565\n",
       "Sonoma Coast                 1474\n",
       "Brunello di Montalcino       1470\n",
       "Rioja                        1469\n",
       "Sonoma County                1246\n",
       "Toscana                      1197\n",
       "Walla Walla Valley (WA)      1066\n",
       "Chianti Classico             1062\n",
       "Santa Barbara County         1000\n",
       "Carneros                      999\n",
       "Yakima Valley                 997\n",
       "Sta. Rita Hills               975\n",
       "Dry Creek Valley              939\n",
       "Sicilia                       925\n",
       "Côtes de Provence             859\n",
       "Santa Ynez Valley             812\n",
       "Santa Lucia Highlands         806\n",
       "Lodi                          803\n",
       "Barbaresco                    794\n",
       "Alexander Valley              784\n",
       "Central Coast                 749\n",
       "Ribera del Duero              724\n",
       "Red Mountain                  723\n",
       "Santa Maria Valley            704\n",
       "Alto Adige                    694\n",
       "Sonoma Valley                 661\n",
       "Anderson Valley               646\n",
       "North Fork of Long Island     599\n",
       "Saint-Émilion                 561\n",
       "Chablis                       559\n",
       "Horse Heaven Hills            559\n",
       "Virginia                      556\n",
       "Dundee Hills                  554\n",
       "Sancerre                      554\n",
       "Santa Cruz Mountains          548\n",
       "Bordeaux                      518\n",
       "Cava                          497\n",
       "Cahors                        493\n",
       "Bordeaux Blanc                491\n",
       "Oregon                        460\n",
       "Name: region_1, dtype: int64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train['region_1'].value_counts()[:50]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Region: Function and loop"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "region = list(train.region_1.value_counts()[:50].index)\n",
    "def region_to_simple(x,region):\n",
    "    if x in region:\n",
    "        return x\n",
    "    else: \n",
    "        return 'Other'\n",
    "train['region_simple'] = train.region_1.apply(lambda x: prov_to_simple(x,region))\n",
    "dummy_region = pd.get_dummies(train.region_simple,prefix = 'region_')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Region: Mean ( ) points"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>points</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>region_simple</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Barolo</th>\n",
       "      <td>90.836148</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sta. Rita Hills</th>\n",
       "      <td>90.734359</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Saint-Émilion</th>\n",
       "      <td>90.666667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Santa Maria Valley</th>\n",
       "      <td>90.663352</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chablis</th>\n",
       "      <td>90.631485</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dundee Hills</th>\n",
       "      <td>90.590253</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Brunello di Montalcino</th>\n",
       "      <td>90.468027</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Anderson Valley</th>\n",
       "      <td>90.339009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Walla Walla Valley (WA)</th>\n",
       "      <td>90.284240</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Champagne</th>\n",
       "      <td>90.234966</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sonoma Coast</th>\n",
       "      <td>89.970149</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Santa Lucia Highlands</th>\n",
       "      <td>89.949132</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Red Mountain</th>\n",
       "      <td>89.921162</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cahors</th>\n",
       "      <td>89.811359</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Santa Cruz Mountains</th>\n",
       "      <td>89.801095</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Barbaresco</th>\n",
       "      <td>89.707809</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Russian River Valley</th>\n",
       "      <td>89.525720</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Alsace</th>\n",
       "      <td>89.472954</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sancerre</th>\n",
       "      <td>89.259928</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Toscana</th>\n",
       "      <td>89.193818</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Willamette Valley</th>\n",
       "      <td>89.083877</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Napa Valley</th>\n",
       "      <td>89.043750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yakima Valley</th>\n",
       "      <td>88.789368</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Carneros</th>\n",
       "      <td>88.771772</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Santa Ynez Valley</th>\n",
       "      <td>88.730296</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Columbia Valley (WA)</th>\n",
       "      <td>88.718477</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chianti Classico</th>\n",
       "      <td>88.680791</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Alto Adige</th>\n",
       "      <td>88.586455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ribera del Duero</th>\n",
       "      <td>88.462707</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Santa Barbara County</th>\n",
       "      <td>88.432000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Horse Heaven Hills</th>\n",
       "      <td>88.429338</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Alexander Valley</th>\n",
       "      <td>88.304847</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Other</th>\n",
       "      <td>88.268568</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sonoma Valley</th>\n",
       "      <td>87.966717</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Paso Robles</th>\n",
       "      <td>87.892340</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Oregon</th>\n",
       "      <td>87.845652</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Côtes de Provence</th>\n",
       "      <td>87.839348</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dry Creek Valley</th>\n",
       "      <td>87.822151</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Rioja</th>\n",
       "      <td>87.713410</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>North Fork of Long Island</th>\n",
       "      <td>87.467446</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sicilia</th>\n",
       "      <td>87.438919</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sonoma County</th>\n",
       "      <td>87.392456</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Finger Lakes</th>\n",
       "      <td>87.094569</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lodi</th>\n",
       "      <td>86.882939</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Central Coast</th>\n",
       "      <td>86.863818</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cava</th>\n",
       "      <td>86.824950</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bordeaux Blanc</th>\n",
       "      <td>86.653768</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mendoza</th>\n",
       "      <td>86.501086</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bordeaux</th>\n",
       "      <td>85.808880</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>California</th>\n",
       "      <td>85.680107</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Virginia</th>\n",
       "      <td>85.424460</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                              points\n",
       "region_simple                       \n",
       "Barolo                     90.836148\n",
       "Sta. Rita Hills            90.734359\n",
       "Saint-Émilion              90.666667\n",
       "Santa Maria Valley         90.663352\n",
       "Chablis                    90.631485\n",
       "Dundee Hills               90.590253\n",
       "Brunello di Montalcino     90.468027\n",
       "Anderson Valley            90.339009\n",
       "Walla Walla Valley (WA)    90.284240\n",
       "Champagne                  90.234966\n",
       "Sonoma Coast               89.970149\n",
       "Santa Lucia Highlands      89.949132\n",
       "Red Mountain               89.921162\n",
       "Cahors                     89.811359\n",
       "Santa Cruz Mountains       89.801095\n",
       "Barbaresco                 89.707809\n",
       "Russian River Valley       89.525720\n",
       "Alsace                     89.472954\n",
       "Sancerre                   89.259928\n",
       "Toscana                    89.193818\n",
       "Willamette Valley          89.083877\n",
       "Napa Valley                89.043750\n",
       "Yakima Valley              88.789368\n",
       "Carneros                   88.771772\n",
       "Santa Ynez Valley          88.730296\n",
       "Columbia Valley (WA)       88.718477\n",
       "Chianti Classico           88.680791\n",
       "Alto Adige                 88.586455\n",
       "Ribera del Duero           88.462707\n",
       "Santa Barbara County       88.432000\n",
       "Horse Heaven Hills         88.429338\n",
       "Alexander Valley           88.304847\n",
       "Other                      88.268568\n",
       "Sonoma Valley              87.966717\n",
       "Paso Robles                87.892340\n",
       "Oregon                     87.845652\n",
       "Côtes de Provence          87.839348\n",
       "Dry Creek Valley           87.822151\n",
       "Rioja                      87.713410\n",
       "North Fork of Long Island  87.467446\n",
       "Sicilia                    87.438919\n",
       "Sonoma County              87.392456\n",
       "Finger Lakes               87.094569\n",
       "Lodi                       86.882939\n",
       "Central Coast              86.863818\n",
       "Cava                       86.824950\n",
       "Bordeaux Blanc             86.653768\n",
       "Mendoza                    86.501086\n",
       "Bordeaux                   85.808880\n",
       "California                 85.680107\n",
       "Virginia                   85.424460"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train[['points','region_simple']].groupby('region_simple').mean().sort_values(by = 'points',ascending = False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Region: Dummy DF"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>region__Alexander Valley</th>\n",
       "      <th>region__Alsace</th>\n",
       "      <th>region__Alto Adige</th>\n",
       "      <th>region__Anderson Valley</th>\n",
       "      <th>region__Barbaresco</th>\n",
       "      <th>region__Barolo</th>\n",
       "      <th>region__Bordeaux</th>\n",
       "      <th>region__Bordeaux Blanc</th>\n",
       "      <th>region__Brunello di Montalcino</th>\n",
       "      <th>region__Cahors</th>\n",
       "      <th>region__California</th>\n",
       "      <th>region__Carneros</th>\n",
       "      <th>region__Cava</th>\n",
       "      <th>region__Central Coast</th>\n",
       "      <th>region__Chablis</th>\n",
       "      <th>region__Champagne</th>\n",
       "      <th>region__Chianti Classico</th>\n",
       "      <th>region__Columbia Valley (WA)</th>\n",
       "      <th>region__Côtes de Provence</th>\n",
       "      <th>region__Dry Creek Valley</th>\n",
       "      <th>region__Dundee Hills</th>\n",
       "      <th>region__Finger Lakes</th>\n",
       "      <th>region__Horse Heaven Hills</th>\n",
       "      <th>region__Lodi</th>\n",
       "      <th>region__Mendoza</th>\n",
       "      <th>region__Napa Valley</th>\n",
       "      <th>region__North Fork of Long Island</th>\n",
       "      <th>region__Oregon</th>\n",
       "      <th>region__Other</th>\n",
       "      <th>region__Paso Robles</th>\n",
       "      <th>region__Red Mountain</th>\n",
       "      <th>region__Ribera del Duero</th>\n",
       "      <th>region__Rioja</th>\n",
       "      <th>region__Russian River Valley</th>\n",
       "      <th>region__Saint-Émilion</th>\n",
       "      <th>region__Sancerre</th>\n",
       "      <th>region__Santa Barbara County</th>\n",
       "      <th>region__Santa Cruz Mountains</th>\n",
       "      <th>region__Santa Lucia Highlands</th>\n",
       "      <th>region__Santa Maria Valley</th>\n",
       "      <th>region__Santa Ynez Valley</th>\n",
       "      <th>region__Sicilia</th>\n",
       "      <th>region__Sonoma Coast</th>\n",
       "      <th>region__Sonoma County</th>\n",
       "      <th>region__Sonoma Valley</th>\n",
       "      <th>region__Sta. Rita Hills</th>\n",
       "      <th>region__Toscana</th>\n",
       "      <th>region__Virginia</th>\n",
       "      <th>region__Walla Walla Valley (WA)</th>\n",
       "      <th>region__Willamette Valley</th>\n",
       "      <th>region__Yakima Valley</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   region__Alexander Valley  region__Alsace  region__Alto Adige  \\\n",
       "0                         0               0                   0   \n",
       "1                         0               0                   0   \n",
       "2                         0               0                   0   \n",
       "3                         0               0                   0   \n",
       "4                         0               0                   0   \n",
       "\n",
       "   region__Anderson Valley  region__Barbaresco  region__Barolo  \\\n",
       "0                        0                   0               0   \n",
       "1                        0                   0               0   \n",
       "2                        0                   0               0   \n",
       "3                        0                   0               0   \n",
       "4                        0                   0               0   \n",
       "\n",
       "   region__Bordeaux  region__Bordeaux Blanc  region__Brunello di Montalcino  \\\n",
       "0                 0                       0                               0   \n",
       "1                 0                       0                               0   \n",
       "2                 0                       0                               0   \n",
       "3                 0                       0                               0   \n",
       "4                 0                       0                               0   \n",
       "\n",
       "   region__Cahors  region__California  region__Carneros  region__Cava  \\\n",
       "0               0                   0                 0             0   \n",
       "1               0                   0                 0             0   \n",
       "2               0                   0                 0             0   \n",
       "3               0                   0                 0             0   \n",
       "4               0                   0                 0             0   \n",
       "\n",
       "   region__Central Coast  region__Chablis  region__Champagne  \\\n",
       "0                      0                0                  0   \n",
       "1                      0                0                  0   \n",
       "2                      0                0                  0   \n",
       "3                      0                0                  0   \n",
       "4                      0                0                  0   \n",
       "\n",
       "   region__Chianti Classico  region__Columbia Valley (WA)  \\\n",
       "0                         0                             0   \n",
       "1                         0                             0   \n",
       "2                         0                             0   \n",
       "3                         0                             0   \n",
       "4                         0                             0   \n",
       "\n",
       "   region__Côtes de Provence  region__Dry Creek Valley  region__Dundee Hills  \\\n",
       "0                          0                         0                     0   \n",
       "1                          0                         0                     0   \n",
       "2                          0                         0                     0   \n",
       "3                          0                         0                     0   \n",
       "4                          0                         0                     0   \n",
       "\n",
       "   region__Finger Lakes  region__Horse Heaven Hills  region__Lodi  \\\n",
       "0                     0                           0             0   \n",
       "1                     0                           0             0   \n",
       "2                     0                           0             0   \n",
       "3                     0                           0             0   \n",
       "4                     0                           0             0   \n",
       "\n",
       "   region__Mendoza  region__Napa Valley  region__North Fork of Long Island  \\\n",
       "0                0                    0                                  0   \n",
       "1                0                    0                                  0   \n",
       "2                0                    0                                  0   \n",
       "3                0                    0                                  0   \n",
       "4                0                    0                                  0   \n",
       "\n",
       "   region__Oregon  region__Other  region__Paso Robles  region__Red Mountain  \\\n",
       "0               0              1                    0                     0   \n",
       "1               0              1                    0                     0   \n",
       "2               0              0                    0                     0   \n",
       "3               0              1                    0                     0   \n",
       "4               0              0                    0                     0   \n",
       "\n",
       "   region__Ribera del Duero  region__Rioja  region__Russian River Valley  \\\n",
       "0                         0              0                             0   \n",
       "1                         0              0                             0   \n",
       "2                         0              0                             0   \n",
       "3                         0              0                             0   \n",
       "4                         0              0                             0   \n",
       "\n",
       "   region__Saint-Émilion  region__Sancerre  region__Santa Barbara County  \\\n",
       "0                      0                 0                             0   \n",
       "1                      0                 0                             0   \n",
       "2                      0                 0                             0   \n",
       "3                      0                 0                             0   \n",
       "4                      0                 0                             0   \n",
       "\n",
       "   region__Santa Cruz Mountains  region__Santa Lucia Highlands  \\\n",
       "0                             0                              0   \n",
       "1                             0                              0   \n",
       "2                             0                              0   \n",
       "3                             0                              0   \n",
       "4                             0                              0   \n",
       "\n",
       "   region__Santa Maria Valley  region__Santa Ynez Valley  region__Sicilia  \\\n",
       "0                           0                          0                0   \n",
       "1                           0                          0                0   \n",
       "2                           0                          0                0   \n",
       "3                           0                          0                0   \n",
       "4                           0                          0                0   \n",
       "\n",
       "   region__Sonoma Coast  region__Sonoma County  region__Sonoma Valley  \\\n",
       "0                     0                      0                      0   \n",
       "1                     0                      0                      0   \n",
       "2                     0                      0                      0   \n",
       "3                     0                      0                      0   \n",
       "4                     0                      0                      0   \n",
       "\n",
       "   region__Sta. Rita Hills  region__Toscana  region__Virginia  \\\n",
       "0                        0                0                 0   \n",
       "1                        0                0                 0   \n",
       "2                        0                0                 0   \n",
       "3                        0                0                 0   \n",
       "4                        0                0                 0   \n",
       "\n",
       "   region__Walla Walla Valley (WA)  region__Willamette Valley  \\\n",
       "0                                0                          0   \n",
       "1                                0                          0   \n",
       "2                                0                          1   \n",
       "3                                0                          0   \n",
       "4                                0                          1   \n",
       "\n",
       "   region__Yakima Valley  \n",
       "0                      0  \n",
       "1                      0  \n",
       "2                      0  \n",
       "3                      0  \n",
       "4                      0  "
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dummy_region.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# VARIETY"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Variety: Value counts\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Pinot Noir                       13272\n",
       "Chardonnay                       11753\n",
       "Cabernet Sauvignon                9472\n",
       "Red Blend                         8946\n",
       "Bordeaux-style Red Blend          6915\n",
       "Riesling                          5189\n",
       "Sauvignon Blanc                   4967\n",
       "Syrah                             4142\n",
       "Rosé                              3564\n",
       "Merlot                            3102\n",
       "Nebbiolo                          2804\n",
       "Zinfandel                         2714\n",
       "Sangiovese                        2707\n",
       "Malbec                            2652\n",
       "Portuguese Red                    2466\n",
       "White Blend                       2360\n",
       "Sparkling Blend                   2153\n",
       "Tempranillo                       1810\n",
       "Rhône-style Red Blend             1471\n",
       "Pinot Gris                        1455\n",
       "Champagne Blend                   1396\n",
       "Cabernet Franc                    1353\n",
       "Grüner Veltliner                  1345\n",
       "Portuguese White                  1159\n",
       "Bordeaux-style White Blend        1066\n",
       "Pinot Grigio                      1052\n",
       "Gamay                             1025\n",
       "Gewürztraminer                    1012\n",
       "Viognier                           996\n",
       "Shiraz                             836\n",
       "Petite Sirah                       770\n",
       "Sangiovese Grosso                  751\n",
       "Barbera                            721\n",
       "Glera                              709\n",
       "Port                               668\n",
       "Grenache                           651\n",
       "Corvina, Rondinella, Molinara      619\n",
       "Chenin Blanc                       591\n",
       "Tempranillo Blend                  588\n",
       "Carmenère                          575\n",
       "Albariño                           477\n",
       "Pinot Blanc                        442\n",
       "Rhône-style White Blend            425\n",
       "Nero d'Avola                       365\n",
       "Aglianico                          359\n",
       "Moscato                            358\n",
       "Garnacha                           326\n",
       "Sauvignon                          316\n",
       "Verdejo                            294\n",
       "Melon                              280\n",
       "Name: variety, dtype: int64"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train['variety'].value_counts()[:50]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Variety: Function and loop"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "variety = list(train.variety.value_counts()[:50].index)\n",
    "def variety_to_simple(x,variety):\n",
    "    if x in variety:\n",
    "        return x\n",
    "    else: \n",
    "        return 'Other'\n",
    "train['variety_simple'] = train.variety.apply(lambda x: variety_to_simple(x,variety))\n",
    "dummy_variety = pd.get_dummies(train.variety_simple,prefix = 'variety_')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Variety: Mean ( ) points"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>points</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>variety_simple</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Sangiovese Grosso</th>\n",
       "      <td>90.529960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Nebbiolo</th>\n",
       "      <td>90.251070</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Grüner Veltliner</th>\n",
       "      <td>89.980669</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Port</th>\n",
       "      <td>89.733533</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Champagne Blend</th>\n",
       "      <td>89.663324</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Riesling</th>\n",
       "      <td>89.450183</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pinot Noir</th>\n",
       "      <td>89.411468</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Syrah</th>\n",
       "      <td>89.286577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Aglianico</th>\n",
       "      <td>89.275766</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Rhône-style Red Blend</th>\n",
       "      <td>89.153637</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bordeaux-style Red Blend</th>\n",
       "      <td>89.106435</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Shiraz</th>\n",
       "      <td>89.058612</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Grenache</th>\n",
       "      <td>88.963134</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Portuguese Red</th>\n",
       "      <td>88.810624</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bordeaux-style White Blend</th>\n",
       "      <td>88.690432</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cabernet Sauvignon</th>\n",
       "      <td>88.607580</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Gewürztraminer</th>\n",
       "      <td>88.590909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chenin Blanc</th>\n",
       "      <td>88.575296</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sangiovese</th>\n",
       "      <td>88.550794</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pinot Gris</th>\n",
       "      <td>88.496220</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Rhône-style White Blend</th>\n",
       "      <td>88.472941</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Melon</th>\n",
       "      <td>88.464286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Red Blend</th>\n",
       "      <td>88.380282</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chardonnay</th>\n",
       "      <td>88.340083</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tempranillo Blend</th>\n",
       "      <td>88.255102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Corvina, Rondinella, Molinara</th>\n",
       "      <td>88.243942</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Petite Sirah</th>\n",
       "      <td>88.203896</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sauvignon</th>\n",
       "      <td>88.177215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cabernet Franc</th>\n",
       "      <td>88.150776</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sparkling Blend</th>\n",
       "      <td>88.045053</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Gamay</th>\n",
       "      <td>88.033171</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Other</th>\n",
       "      <td>87.998968</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Malbec</th>\n",
       "      <td>87.983032</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Zinfandel</th>\n",
       "      <td>87.828666</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Barbera</th>\n",
       "      <td>87.783634</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Viognier</th>\n",
       "      <td>87.771084</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pinot Blanc</th>\n",
       "      <td>87.753394</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Albariño</th>\n",
       "      <td>87.744235</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tempranillo</th>\n",
       "      <td>87.514365</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Nero d'Avola</th>\n",
       "      <td>87.449315</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sauvignon Blanc</th>\n",
       "      <td>87.429636</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>White Blend</th>\n",
       "      <td>87.352966</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Glera</th>\n",
       "      <td>87.244006</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Merlot</th>\n",
       "      <td>87.208575</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Portuguese White</th>\n",
       "      <td>86.930975</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Rosé</th>\n",
       "      <td>86.846240</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Carmenère</th>\n",
       "      <td>86.589565</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Verdejo</th>\n",
       "      <td>86.340136</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Moscato</th>\n",
       "      <td>86.279330</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pinot Grigio</th>\n",
       "      <td>86.237643</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Garnacha</th>\n",
       "      <td>85.929448</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                  points\n",
       "variety_simple                          \n",
       "Sangiovese Grosso              90.529960\n",
       "Nebbiolo                       90.251070\n",
       "Grüner Veltliner               89.980669\n",
       "Port                           89.733533\n",
       "Champagne Blend                89.663324\n",
       "Riesling                       89.450183\n",
       "Pinot Noir                     89.411468\n",
       "Syrah                          89.286577\n",
       "Aglianico                      89.275766\n",
       "Rhône-style Red Blend          89.153637\n",
       "Bordeaux-style Red Blend       89.106435\n",
       "Shiraz                         89.058612\n",
       "Grenache                       88.963134\n",
       "Portuguese Red                 88.810624\n",
       "Bordeaux-style White Blend     88.690432\n",
       "Cabernet Sauvignon             88.607580\n",
       "Gewürztraminer                 88.590909\n",
       "Chenin Blanc                   88.575296\n",
       "Sangiovese                     88.550794\n",
       "Pinot Gris                     88.496220\n",
       "Rhône-style White Blend        88.472941\n",
       "Melon                          88.464286\n",
       "Red Blend                      88.380282\n",
       "Chardonnay                     88.340083\n",
       "Tempranillo Blend              88.255102\n",
       "Corvina, Rondinella, Molinara  88.243942\n",
       "Petite Sirah                   88.203896\n",
       "Sauvignon                      88.177215\n",
       "Cabernet Franc                 88.150776\n",
       "Sparkling Blend                88.045053\n",
       "Gamay                          88.033171\n",
       "Other                          87.998968\n",
       "Malbec                         87.983032\n",
       "Zinfandel                      87.828666\n",
       "Barbera                        87.783634\n",
       "Viognier                       87.771084\n",
       "Pinot Blanc                    87.753394\n",
       "Albariño                       87.744235\n",
       "Tempranillo                    87.514365\n",
       "Nero d'Avola                   87.449315\n",
       "Sauvignon Blanc                87.429636\n",
       "White Blend                    87.352966\n",
       "Glera                          87.244006\n",
       "Merlot                         87.208575\n",
       "Portuguese White               86.930975\n",
       "Rosé                           86.846240\n",
       "Carmenère                      86.589565\n",
       "Verdejo                        86.340136\n",
       "Moscato                        86.279330\n",
       "Pinot Grigio                   86.237643\n",
       "Garnacha                       85.929448"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train[['points','variety_simple']].groupby('variety_simple').mean().sort_values(by = 'points',ascending = False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Variety: Dummy DF"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>variety__Aglianico</th>\n",
       "      <th>variety__Albariño</th>\n",
       "      <th>variety__Barbera</th>\n",
       "      <th>variety__Bordeaux-style Red Blend</th>\n",
       "      <th>variety__Bordeaux-style White Blend</th>\n",
       "      <th>variety__Cabernet Franc</th>\n",
       "      <th>variety__Cabernet Sauvignon</th>\n",
       "      <th>variety__Carmenère</th>\n",
       "      <th>variety__Champagne Blend</th>\n",
       "      <th>variety__Chardonnay</th>\n",
       "      <th>variety__Chenin Blanc</th>\n",
       "      <th>variety__Corvina, Rondinella, Molinara</th>\n",
       "      <th>variety__Gamay</th>\n",
       "      <th>variety__Garnacha</th>\n",
       "      <th>variety__Gewürztraminer</th>\n",
       "      <th>variety__Glera</th>\n",
       "      <th>variety__Grenache</th>\n",
       "      <th>variety__Grüner Veltliner</th>\n",
       "      <th>variety__Malbec</th>\n",
       "      <th>variety__Melon</th>\n",
       "      <th>variety__Merlot</th>\n",
       "      <th>variety__Moscato</th>\n",
       "      <th>variety__Nebbiolo</th>\n",
       "      <th>variety__Nero d'Avola</th>\n",
       "      <th>variety__Other</th>\n",
       "      <th>variety__Petite Sirah</th>\n",
       "      <th>variety__Pinot Blanc</th>\n",
       "      <th>variety__Pinot Grigio</th>\n",
       "      <th>variety__Pinot Gris</th>\n",
       "      <th>variety__Pinot Noir</th>\n",
       "      <th>variety__Port</th>\n",
       "      <th>variety__Portuguese Red</th>\n",
       "      <th>variety__Portuguese White</th>\n",
       "      <th>variety__Red Blend</th>\n",
       "      <th>variety__Rhône-style Red Blend</th>\n",
       "      <th>variety__Rhône-style White Blend</th>\n",
       "      <th>variety__Riesling</th>\n",
       "      <th>variety__Rosé</th>\n",
       "      <th>variety__Sangiovese</th>\n",
       "      <th>variety__Sangiovese Grosso</th>\n",
       "      <th>variety__Sauvignon</th>\n",
       "      <th>variety__Sauvignon Blanc</th>\n",
       "      <th>variety__Shiraz</th>\n",
       "      <th>variety__Sparkling Blend</th>\n",
       "      <th>variety__Syrah</th>\n",
       "      <th>variety__Tempranillo</th>\n",
       "      <th>variety__Tempranillo Blend</th>\n",
       "      <th>variety__Verdejo</th>\n",
       "      <th>variety__Viognier</th>\n",
       "      <th>variety__White Blend</th>\n",
       "      <th>variety__Zinfandel</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   variety__Aglianico  variety__Albariño  variety__Barbera  \\\n",
       "0                   0                  0                 0   \n",
       "1                   0                  0                 0   \n",
       "2                   0                  0                 0   \n",
       "3                   0                  0                 0   \n",
       "4                   0                  0                 0   \n",
       "\n",
       "   variety__Bordeaux-style Red Blend  variety__Bordeaux-style White Blend  \\\n",
       "0                                  0                                    0   \n",
       "1                                  0                                    0   \n",
       "2                                  0                                    0   \n",
       "3                                  0                                    0   \n",
       "4                                  0                                    0   \n",
       "\n",
       "   variety__Cabernet Franc  variety__Cabernet Sauvignon  variety__Carmenère  \\\n",
       "0                        0                            0                   0   \n",
       "1                        0                            0                   0   \n",
       "2                        0                            0                   0   \n",
       "3                        0                            0                   0   \n",
       "4                        0                            0                   0   \n",
       "\n",
       "   variety__Champagne Blend  variety__Chardonnay  variety__Chenin Blanc  \\\n",
       "0                         0                    0                      0   \n",
       "1                         0                    0                      0   \n",
       "2                         0                    0                      0   \n",
       "3                         0                    0                      0   \n",
       "4                         0                    0                      0   \n",
       "\n",
       "   variety__Corvina, Rondinella, Molinara  variety__Gamay  variety__Garnacha  \\\n",
       "0                                       0               0                  0   \n",
       "1                                       0               0                  0   \n",
       "2                                       0               0                  0   \n",
       "3                                       0               0                  0   \n",
       "4                                       0               0                  0   \n",
       "\n",
       "   variety__Gewürztraminer  variety__Glera  variety__Grenache  \\\n",
       "0                        0               0                  0   \n",
       "1                        0               0                  0   \n",
       "2                        0               0                  0   \n",
       "3                        0               0                  0   \n",
       "4                        0               0                  0   \n",
       "\n",
       "   variety__Grüner Veltliner  variety__Malbec  variety__Melon  \\\n",
       "0                          0                0               0   \n",
       "1                          0                0               0   \n",
       "2                          0                0               0   \n",
       "3                          0                0               0   \n",
       "4                          0                0               0   \n",
       "\n",
       "   variety__Merlot  variety__Moscato  variety__Nebbiolo  \\\n",
       "0                0                 0                  0   \n",
       "1                0                 0                  0   \n",
       "2                0                 0                  0   \n",
       "3                0                 0                  0   \n",
       "4                0                 0                  0   \n",
       "\n",
       "   variety__Nero d'Avola  variety__Other  variety__Petite Sirah  \\\n",
       "0                      0               0                      0   \n",
       "1                      0               0                      0   \n",
       "2                      0               0                      0   \n",
       "3                      0               0                      0   \n",
       "4                      0               0                      0   \n",
       "\n",
       "   variety__Pinot Blanc  variety__Pinot Grigio  variety__Pinot Gris  \\\n",
       "0                     0                      0                    0   \n",
       "1                     0                      0                    0   \n",
       "2                     0                      0                    1   \n",
       "3                     0                      0                    0   \n",
       "4                     0                      0                    0   \n",
       "\n",
       "   variety__Pinot Noir  variety__Port  variety__Portuguese Red  \\\n",
       "0                    0              0                        0   \n",
       "1                    0              0                        1   \n",
       "2                    0              0                        0   \n",
       "3                    0              0                        0   \n",
       "4                    1              0                        0   \n",
       "\n",
       "   variety__Portuguese White  variety__Red Blend  \\\n",
       "0                          0                   0   \n",
       "1                          0                   0   \n",
       "2                          0                   0   \n",
       "3                          0                   0   \n",
       "4                          0                   0   \n",
       "\n",
       "   variety__Rhône-style Red Blend  variety__Rhône-style White Blend  \\\n",
       "0                               0                                 0   \n",
       "1                               0                                 0   \n",
       "2                               0                                 0   \n",
       "3                               0                                 0   \n",
       "4                               0                                 0   \n",
       "\n",
       "   variety__Riesling  variety__Rosé  variety__Sangiovese  \\\n",
       "0                  0              0                    0   \n",
       "1                  0              0                    0   \n",
       "2                  0              0                    0   \n",
       "3                  1              0                    0   \n",
       "4                  0              0                    0   \n",
       "\n",
       "   variety__Sangiovese Grosso  variety__Sauvignon  variety__Sauvignon Blanc  \\\n",
       "0                           0                   0                         0   \n",
       "1                           0                   0                         0   \n",
       "2                           0                   0                         0   \n",
       "3                           0                   0                         0   \n",
       "4                           0                   0                         0   \n",
       "\n",
       "   variety__Shiraz  variety__Sparkling Blend  variety__Syrah  \\\n",
       "0                0                         0               0   \n",
       "1                0                         0               0   \n",
       "2                0                         0               0   \n",
       "3                0                         0               0   \n",
       "4                0                         0               0   \n",
       "\n",
       "   variety__Tempranillo  variety__Tempranillo Blend  variety__Verdejo  \\\n",
       "0                     0                           0                 0   \n",
       "1                     0                           0                 0   \n",
       "2                     0                           0                 0   \n",
       "3                     0                           0                 0   \n",
       "4                     0                           0                 0   \n",
       "\n",
       "   variety__Viognier  variety__White Blend  variety__Zinfandel  \n",
       "0                  0                     1                   0  \n",
       "1                  0                     0                   0  \n",
       "2                  0                     0                   0  \n",
       "3                  0                     0                   0  \n",
       "4                  0                     0                   0  "
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dummy_variety.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>country</th>\n",
       "      <th>description</th>\n",
       "      <th>designation</th>\n",
       "      <th>points</th>\n",
       "      <th>price</th>\n",
       "      <th>province</th>\n",
       "      <th>region_1</th>\n",
       "      <th>region_2</th>\n",
       "      <th>taster_name</th>\n",
       "      <th>taster_twitter_handle</th>\n",
       "      <th>title</th>\n",
       "      <th>variety</th>\n",
       "      <th>winery</th>\n",
       "      <th>country_simple</th>\n",
       "      <th>province_simple</th>\n",
       "      <th>region_simple</th>\n",
       "      <th>variety_simple</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>129966</th>\n",
       "      <td>129966</td>\n",
       "      <td>Germany</td>\n",
       "      <td>Notes of honeysuckle and cantaloupe sweeten this deliciously feather-light spätlese. It's intensely juicy, quenching the palate with streams of tart tangerine and grapefruit acidity, yet wraps up with a kiss of honey and peach.</td>\n",
       "      <td>Brauneberger Juffer-Sonnenuhr Spätlese</td>\n",
       "      <td>90</td>\n",
       "      <td>28.0</td>\n",
       "      <td>Mosel</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Anna Lee C. Iijima</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Dr. H. Thanisch (Erben Müller-Burggraef) 2013 Brauneberger Juffer-Sonnenuhr Spätlese Riesling (Mosel)</td>\n",
       "      <td>Riesling</td>\n",
       "      <td>Dr. H. Thanisch (Erben Müller-Burggraef)</td>\n",
       "      <td>Germany</td>\n",
       "      <td>Mosel</td>\n",
       "      <td>Other</td>\n",
       "      <td>Riesling</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129967</th>\n",
       "      <td>129967</td>\n",
       "      <td>US</td>\n",
       "      <td>Citation is given as much as a decade of bottle age prior to release, which means it is pre-cellared and drinking at its peak. Baked cherry, cocoa and coconut flavors combine gracefully, with soft, secondary fruit compote highlights.</td>\n",
       "      <td>NaN</td>\n",
       "      <td>90</td>\n",
       "      <td>75.0</td>\n",
       "      <td>Oregon</td>\n",
       "      <td>Oregon</td>\n",
       "      <td>Oregon Other</td>\n",
       "      <td>Paul Gregutt</td>\n",
       "      <td>@paulgwine</td>\n",
       "      <td>Citation 2004 Pinot Noir (Oregon)</td>\n",
       "      <td>Pinot Noir</td>\n",
       "      <td>Citation</td>\n",
       "      <td>US</td>\n",
       "      <td>Oregon</td>\n",
       "      <td>Oregon</td>\n",
       "      <td>Pinot Noir</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129968</th>\n",
       "      <td>129968</td>\n",
       "      <td>France</td>\n",
       "      <td>Well-drained gravel soil gives this wine its crisp and dry character. It is ripe and fruity, although the spice is subdued in favor of a more serious structure. This is a wine to age for a couple of years, so drink from 2017.</td>\n",
       "      <td>Kritt</td>\n",
       "      <td>90</td>\n",
       "      <td>30.0</td>\n",
       "      <td>Alsace</td>\n",
       "      <td>Alsace</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Roger Voss</td>\n",
       "      <td>@vossroger</td>\n",
       "      <td>Domaine Gresser 2013 Kritt Gewurztraminer (Alsace)</td>\n",
       "      <td>Gewürztraminer</td>\n",
       "      <td>Domaine Gresser</td>\n",
       "      <td>France</td>\n",
       "      <td>Alsace</td>\n",
       "      <td>Alsace</td>\n",
       "      <td>Gewürztraminer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129969</th>\n",
       "      <td>129969</td>\n",
       "      <td>France</td>\n",
       "      <td>A dry style of Pinot Gris, this is crisp with some acidity. It also has weight and a solid, powerful core of spice and baked apple flavors. With its structure still developing, the wine needs to age. Drink from 2015.</td>\n",
       "      <td>NaN</td>\n",
       "      <td>90</td>\n",
       "      <td>32.0</td>\n",
       "      <td>Alsace</td>\n",
       "      <td>Alsace</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Roger Voss</td>\n",
       "      <td>@vossroger</td>\n",
       "      <td>Domaine Marcel Deiss 2012 Pinot Gris (Alsace)</td>\n",
       "      <td>Pinot Gris</td>\n",
       "      <td>Domaine Marcel Deiss</td>\n",
       "      <td>France</td>\n",
       "      <td>Alsace</td>\n",
       "      <td>Alsace</td>\n",
       "      <td>Pinot Gris</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129970</th>\n",
       "      <td>129970</td>\n",
       "      <td>France</td>\n",
       "      <td>Big, rich and off-dry, this is powered by intense spiciness and rounded texture. Lychees dominate the fruit profile, giving an opulent feel to the aftertaste. Drink now.</td>\n",
       "      <td>Lieu-dit Harth Cuvée Caroline</td>\n",
       "      <td>90</td>\n",
       "      <td>21.0</td>\n",
       "      <td>Alsace</td>\n",
       "      <td>Alsace</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Roger Voss</td>\n",
       "      <td>@vossroger</td>\n",
       "      <td>Domaine Schoffit 2012 Lieu-dit Harth Cuvée Caroline Gewurztraminer (Alsace)</td>\n",
       "      <td>Gewürztraminer</td>\n",
       "      <td>Domaine Schoffit</td>\n",
       "      <td>France</td>\n",
       "      <td>Alsace</td>\n",
       "      <td>Alsace</td>\n",
       "      <td>Gewürztraminer</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Unnamed: 0  country  \\\n",
       "129966      129966  Germany   \n",
       "129967      129967       US   \n",
       "129968      129968   France   \n",
       "129969      129969   France   \n",
       "129970      129970   France   \n",
       "\n",
       "                                                                                                                                                                                                                                      description  \\\n",
       "129966        Notes of honeysuckle and cantaloupe sweeten this deliciously feather-light spätlese. It's intensely juicy, quenching the palate with streams of tart tangerine and grapefruit acidity, yet wraps up with a kiss of honey and peach.   \n",
       "129967  Citation is given as much as a decade of bottle age prior to release, which means it is pre-cellared and drinking at its peak. Baked cherry, cocoa and coconut flavors combine gracefully, with soft, secondary fruit compote highlights.   \n",
       "129968          Well-drained gravel soil gives this wine its crisp and dry character. It is ripe and fruity, although the spice is subdued in favor of a more serious structure. This is a wine to age for a couple of years, so drink from 2017.   \n",
       "129969                   A dry style of Pinot Gris, this is crisp with some acidity. It also has weight and a solid, powerful core of spice and baked apple flavors. With its structure still developing, the wine needs to age. Drink from 2015.   \n",
       "129970                                                                  Big, rich and off-dry, this is powered by intense spiciness and rounded texture. Lychees dominate the fruit profile, giving an opulent feel to the aftertaste. Drink now.   \n",
       "\n",
       "                                   designation  points  price province  \\\n",
       "129966  Brauneberger Juffer-Sonnenuhr Spätlese      90   28.0    Mosel   \n",
       "129967                                     NaN      90   75.0   Oregon   \n",
       "129968                                   Kritt      90   30.0   Alsace   \n",
       "129969                                     NaN      90   32.0   Alsace   \n",
       "129970           Lieu-dit Harth Cuvée Caroline      90   21.0   Alsace   \n",
       "\n",
       "       region_1      region_2         taster_name taster_twitter_handle  \\\n",
       "129966      NaN           NaN  Anna Lee C. Iijima                   NaN   \n",
       "129967   Oregon  Oregon Other        Paul Gregutt           @paulgwine    \n",
       "129968   Alsace           NaN          Roger Voss            @vossroger   \n",
       "129969   Alsace           NaN          Roger Voss            @vossroger   \n",
       "129970   Alsace           NaN          Roger Voss            @vossroger   \n",
       "\n",
       "                                                                                                        title  \\\n",
       "129966  Dr. H. Thanisch (Erben Müller-Burggraef) 2013 Brauneberger Juffer-Sonnenuhr Spätlese Riesling (Mosel)   \n",
       "129967                                                                      Citation 2004 Pinot Noir (Oregon)   \n",
       "129968                                                     Domaine Gresser 2013 Kritt Gewurztraminer (Alsace)   \n",
       "129969                                                          Domaine Marcel Deiss 2012 Pinot Gris (Alsace)   \n",
       "129970                            Domaine Schoffit 2012 Lieu-dit Harth Cuvée Caroline Gewurztraminer (Alsace)   \n",
       "\n",
       "               variety                                    winery  \\\n",
       "129966        Riesling  Dr. H. Thanisch (Erben Müller-Burggraef)   \n",
       "129967      Pinot Noir                                  Citation   \n",
       "129968  Gewürztraminer                           Domaine Gresser   \n",
       "129969      Pinot Gris                      Domaine Marcel Deiss   \n",
       "129970  Gewürztraminer                          Domaine Schoffit   \n",
       "\n",
       "       country_simple province_simple region_simple  variety_simple  \n",
       "129966        Germany           Mosel         Other        Riesling  \n",
       "129967             US          Oregon        Oregon      Pinot Noir  \n",
       "129968         France          Alsace        Alsace  Gewürztraminer  \n",
       "129969         France          Alsace        Alsace      Pinot Gris  \n",
       "129970         France          Alsace        Alsace  Gewürztraminer  "
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_mod = train[['description','points','price','winery']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>description</th>\n",
       "      <th>points</th>\n",
       "      <th>price</th>\n",
       "      <th>winery</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Aromas include tropical fruit, broom, brimstone and dried herb. The palate isn't overly expressive, offering unripened apple, citrus and dried sage alongside brisk acidity.</td>\n",
       "      <td>87</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Nicosia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>This is ripe and fruity, a wine that is smooth while still structured. Firm tannins are filled out with juicy red berry fruits and freshened with acidity. It's  already drinkable, although it will certainly be better from 2016.</td>\n",
       "      <td>87</td>\n",
       "      <td>15.0</td>\n",
       "      <td>Quinta dos Avidagos</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Tart and snappy, the flavors of lime flesh and rind dominate. Some green pineapple pokes through, with crisp acidity underscoring the flavors. The wine was all stainless-steel fermented.</td>\n",
       "      <td>87</td>\n",
       "      <td>14.0</td>\n",
       "      <td>Rainstorm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Pineapple rind, lemon pith and orange blossom start off the aromas. The palate is a bit more opulent, with notes of honey-drizzled guava and mango giving way to a slightly astringent, semidry finish.</td>\n",
       "      <td>87</td>\n",
       "      <td>13.0</td>\n",
       "      <td>St. Julian</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Much like the regular bottling from 2012, this comes across as rather rough and tannic, with rustic, earthy, herbal characteristics. Nonetheless, if you think of it as a pleasantly unfussy country wine, it's a good companion to a hearty winter stew.</td>\n",
       "      <td>87</td>\n",
       "      <td>65.0</td>\n",
       "      <td>Sweet Cheeks</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                                                                                                                                                                                                                 description  \\\n",
       "0                                                                               Aromas include tropical fruit, broom, brimstone and dried herb. The palate isn't overly expressive, offering unripened apple, citrus and dried sage alongside brisk acidity.   \n",
       "1                        This is ripe and fruity, a wine that is smooth while still structured. Firm tannins are filled out with juicy red berry fruits and freshened with acidity. It's  already drinkable, although it will certainly be better from 2016.   \n",
       "2                                                                 Tart and snappy, the flavors of lime flesh and rind dominate. Some green pineapple pokes through, with crisp acidity underscoring the flavors. The wine was all stainless-steel fermented.   \n",
       "3                                                    Pineapple rind, lemon pith and orange blossom start off the aromas. The palate is a bit more opulent, with notes of honey-drizzled guava and mango giving way to a slightly astringent, semidry finish.   \n",
       "4  Much like the regular bottling from 2012, this comes across as rather rough and tannic, with rustic, earthy, herbal characteristics. Nonetheless, if you think of it as a pleasantly unfussy country wine, it's a good companion to a hearty winter stew.   \n",
       "\n",
       "   points  price               winery  \n",
       "0      87    NaN              Nicosia  \n",
       "1      87   15.0  Quinta dos Avidagos  \n",
       "2      87   14.0            Rainstorm  \n",
       "3      87   13.0           St. Julian  \n",
       "4      87   65.0         Sweet Cheeks  "
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_mod.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Concat the dummy features + shape the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "training_model=pd.concat([train_mod,dummy_country,dummy_prov,dummy_region,dummy_variety],axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>description</th>\n",
       "      <th>points</th>\n",
       "      <th>price</th>\n",
       "      <th>winery</th>\n",
       "      <th>country__Argentina</th>\n",
       "      <th>country__Australia</th>\n",
       "      <th>country__Austria</th>\n",
       "      <th>country__Chile</th>\n",
       "      <th>country__France</th>\n",
       "      <th>country__Germany</th>\n",
       "      <th>country__Italy</th>\n",
       "      <th>country__New Zealand</th>\n",
       "      <th>country__Other</th>\n",
       "      <th>country__Portugal</th>\n",
       "      <th>country__South Africa</th>\n",
       "      <th>country__Spain</th>\n",
       "      <th>country__US</th>\n",
       "      <th>province__Alentejano</th>\n",
       "      <th>province__Alsace</th>\n",
       "      <th>province__Beaujolais</th>\n",
       "      <th>province__Bordeaux</th>\n",
       "      <th>province__Burgundy</th>\n",
       "      <th>province__California</th>\n",
       "      <th>province__Catalonia</th>\n",
       "      <th>province__Central Italy</th>\n",
       "      <th>province__Champagne</th>\n",
       "      <th>province__Colchagua Valley</th>\n",
       "      <th>province__Douro</th>\n",
       "      <th>province__Loire Valley</th>\n",
       "      <th>province__Marlborough</th>\n",
       "      <th>province__Mendoza Province</th>\n",
       "      <th>province__Mosel</th>\n",
       "      <th>province__New York</th>\n",
       "      <th>province__Northeastern Italy</th>\n",
       "      <th>province__Northern Spain</th>\n",
       "      <th>province__Oregon</th>\n",
       "      <th>province__Other</th>\n",
       "      <th>province__Piedmont</th>\n",
       "      <th>province__Provence</th>\n",
       "      <th>province__Rhône Valley</th>\n",
       "      <th>province__Sicily &amp; Sardinia</th>\n",
       "      <th>province__South Australia</th>\n",
       "      <th>province__Southern Italy</th>\n",
       "      <th>province__Southwest France</th>\n",
       "      <th>province__Tuscany</th>\n",
       "      <th>province__Veneto</th>\n",
       "      <th>province__Virginia</th>\n",
       "      <th>province__Washington</th>\n",
       "      <th>region__Alexander Valley</th>\n",
       "      <th>region__Alsace</th>\n",
       "      <th>region__Alto Adige</th>\n",
       "      <th>region__Anderson Valley</th>\n",
       "      <th>region__Barbaresco</th>\n",
       "      <th>region__Barolo</th>\n",
       "      <th>region__Bordeaux</th>\n",
       "      <th>region__Bordeaux Blanc</th>\n",
       "      <th>region__Brunello di Montalcino</th>\n",
       "      <th>region__Cahors</th>\n",
       "      <th>region__California</th>\n",
       "      <th>region__Carneros</th>\n",
       "      <th>region__Cava</th>\n",
       "      <th>region__Central Coast</th>\n",
       "      <th>region__Chablis</th>\n",
       "      <th>region__Champagne</th>\n",
       "      <th>region__Chianti Classico</th>\n",
       "      <th>region__Columbia Valley (WA)</th>\n",
       "      <th>region__Côtes de Provence</th>\n",
       "      <th>region__Dry Creek Valley</th>\n",
       "      <th>region__Dundee Hills</th>\n",
       "      <th>region__Finger Lakes</th>\n",
       "      <th>region__Horse Heaven Hills</th>\n",
       "      <th>region__Lodi</th>\n",
       "      <th>region__Mendoza</th>\n",
       "      <th>region__Napa Valley</th>\n",
       "      <th>region__North Fork of Long Island</th>\n",
       "      <th>region__Oregon</th>\n",
       "      <th>region__Other</th>\n",
       "      <th>region__Paso Robles</th>\n",
       "      <th>region__Red Mountain</th>\n",
       "      <th>region__Ribera del Duero</th>\n",
       "      <th>region__Rioja</th>\n",
       "      <th>region__Russian River Valley</th>\n",
       "      <th>region__Saint-Émilion</th>\n",
       "      <th>region__Sancerre</th>\n",
       "      <th>region__Santa Barbara County</th>\n",
       "      <th>region__Santa Cruz Mountains</th>\n",
       "      <th>region__Santa Lucia Highlands</th>\n",
       "      <th>region__Santa Maria Valley</th>\n",
       "      <th>region__Santa Ynez Valley</th>\n",
       "      <th>region__Sicilia</th>\n",
       "      <th>region__Sonoma Coast</th>\n",
       "      <th>region__Sonoma County</th>\n",
       "      <th>region__Sonoma Valley</th>\n",
       "      <th>region__Sta. Rita Hills</th>\n",
       "      <th>region__Toscana</th>\n",
       "      <th>region__Virginia</th>\n",
       "      <th>region__Walla Walla Valley (WA)</th>\n",
       "      <th>region__Willamette Valley</th>\n",
       "      <th>region__Yakima Valley</th>\n",
       "      <th>variety__Aglianico</th>\n",
       "      <th>variety__Albariño</th>\n",
       "      <th>variety__Barbera</th>\n",
       "      <th>variety__Bordeaux-style Red Blend</th>\n",
       "      <th>variety__Bordeaux-style White Blend</th>\n",
       "      <th>variety__Cabernet Franc</th>\n",
       "      <th>variety__Cabernet Sauvignon</th>\n",
       "      <th>variety__Carmenère</th>\n",
       "      <th>variety__Champagne Blend</th>\n",
       "      <th>variety__Chardonnay</th>\n",
       "      <th>variety__Chenin Blanc</th>\n",
       "      <th>variety__Corvina, Rondinella, Molinara</th>\n",
       "      <th>variety__Gamay</th>\n",
       "      <th>variety__Garnacha</th>\n",
       "      <th>variety__Gewürztraminer</th>\n",
       "      <th>variety__Glera</th>\n",
       "      <th>variety__Grenache</th>\n",
       "      <th>variety__Grüner Veltliner</th>\n",
       "      <th>variety__Malbec</th>\n",
       "      <th>variety__Melon</th>\n",
       "      <th>variety__Merlot</th>\n",
       "      <th>variety__Moscato</th>\n",
       "      <th>variety__Nebbiolo</th>\n",
       "      <th>variety__Nero d'Avola</th>\n",
       "      <th>variety__Other</th>\n",
       "      <th>variety__Petite Sirah</th>\n",
       "      <th>variety__Pinot Blanc</th>\n",
       "      <th>variety__Pinot Grigio</th>\n",
       "      <th>variety__Pinot Gris</th>\n",
       "      <th>variety__Pinot Noir</th>\n",
       "      <th>variety__Port</th>\n",
       "      <th>variety__Portuguese Red</th>\n",
       "      <th>variety__Portuguese White</th>\n",
       "      <th>variety__Red Blend</th>\n",
       "      <th>variety__Rhône-style Red Blend</th>\n",
       "      <th>variety__Rhône-style White Blend</th>\n",
       "      <th>variety__Riesling</th>\n",
       "      <th>variety__Rosé</th>\n",
       "      <th>variety__Sangiovese</th>\n",
       "      <th>variety__Sangiovese Grosso</th>\n",
       "      <th>variety__Sauvignon</th>\n",
       "      <th>variety__Sauvignon Blanc</th>\n",
       "      <th>variety__Shiraz</th>\n",
       "      <th>variety__Sparkling Blend</th>\n",
       "      <th>variety__Syrah</th>\n",
       "      <th>variety__Tempranillo</th>\n",
       "      <th>variety__Tempranillo Blend</th>\n",
       "      <th>variety__Verdejo</th>\n",
       "      <th>variety__Viognier</th>\n",
       "      <th>variety__White Blend</th>\n",
       "      <th>variety__Zinfandel</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Aromas include tropical fruit, broom, brimstone and dried herb. The palate isn't overly expressive, offering unripened apple, citrus and dried sage alongside brisk acidity.</td>\n",
       "      <td>87</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Nicosia</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>This is ripe and fruity, a wine that is smooth while still structured. Firm tannins are filled out with juicy red berry fruits and freshened with acidity. It's  already drinkable, although it will certainly be better from 2016.</td>\n",
       "      <td>87</td>\n",
       "      <td>15.0</td>\n",
       "      <td>Quinta dos Avidagos</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Tart and snappy, the flavors of lime flesh and rind dominate. Some green pineapple pokes through, with crisp acidity underscoring the flavors. The wine was all stainless-steel fermented.</td>\n",
       "      <td>87</td>\n",
       "      <td>14.0</td>\n",
       "      <td>Rainstorm</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Pineapple rind, lemon pith and orange blossom start off the aromas. The palate is a bit more opulent, with notes of honey-drizzled guava and mango giving way to a slightly astringent, semidry finish.</td>\n",
       "      <td>87</td>\n",
       "      <td>13.0</td>\n",
       "      <td>St. Julian</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Much like the regular bottling from 2012, this comes across as rather rough and tannic, with rustic, earthy, herbal characteristics. Nonetheless, if you think of it as a pleasantly unfussy country wine, it's a good companion to a hearty winter stew.</td>\n",
       "      <td>87</td>\n",
       "      <td>65.0</td>\n",
       "      <td>Sweet Cheeks</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                                                                                                                                                                                                                 description  \\\n",
       "0                                                                               Aromas include tropical fruit, broom, brimstone and dried herb. The palate isn't overly expressive, offering unripened apple, citrus and dried sage alongside brisk acidity.   \n",
       "1                        This is ripe and fruity, a wine that is smooth while still structured. Firm tannins are filled out with juicy red berry fruits and freshened with acidity. It's  already drinkable, although it will certainly be better from 2016.   \n",
       "2                                                                 Tart and snappy, the flavors of lime flesh and rind dominate. Some green pineapple pokes through, with crisp acidity underscoring the flavors. The wine was all stainless-steel fermented.   \n",
       "3                                                    Pineapple rind, lemon pith and orange blossom start off the aromas. The palate is a bit more opulent, with notes of honey-drizzled guava and mango giving way to a slightly astringent, semidry finish.   \n",
       "4  Much like the regular bottling from 2012, this comes across as rather rough and tannic, with rustic, earthy, herbal characteristics. Nonetheless, if you think of it as a pleasantly unfussy country wine, it's a good companion to a hearty winter stew.   \n",
       "\n",
       "   points  price               winery  country__Argentina  country__Australia  \\\n",
       "0      87    NaN              Nicosia                   0                   0   \n",
       "1      87   15.0  Quinta dos Avidagos                   0                   0   \n",
       "2      87   14.0            Rainstorm                   0                   0   \n",
       "3      87   13.0           St. Julian                   0                   0   \n",
       "4      87   65.0         Sweet Cheeks                   0                   0   \n",
       "\n",
       "   country__Austria  country__Chile  country__France  country__Germany  \\\n",
       "0                 0               0                0                 0   \n",
       "1                 0               0                0                 0   \n",
       "2                 0               0                0                 0   \n",
       "3                 0               0                0                 0   \n",
       "4                 0               0                0                 0   \n",
       "\n",
       "   country__Italy  country__New Zealand  country__Other  country__Portugal  \\\n",
       "0               1                     0               0                  0   \n",
       "1               0                     0               0                  1   \n",
       "2               0                     0               0                  0   \n",
       "3               0                     0               0                  0   \n",
       "4               0                     0               0                  0   \n",
       "\n",
       "   country__South Africa  country__Spain  country__US  province__Alentejano  \\\n",
       "0                      0               0            0                     0   \n",
       "1                      0               0            0                     0   \n",
       "2                      0               0            1                     0   \n",
       "3                      0               0            1                     0   \n",
       "4                      0               0            1                     0   \n",
       "\n",
       "   province__Alsace  province__Beaujolais  province__Bordeaux  \\\n",
       "0                 0                     0                   0   \n",
       "1                 0                     0                   0   \n",
       "2                 0                     0                   0   \n",
       "3                 0                     0                   0   \n",
       "4                 0                     0                   0   \n",
       "\n",
       "   province__Burgundy  province__California  province__Catalonia  \\\n",
       "0                   0                     0                    0   \n",
       "1                   0                     0                    0   \n",
       "2                   0                     0                    0   \n",
       "3                   0                     0                    0   \n",
       "4                   0                     0                    0   \n",
       "\n",
       "   province__Central Italy  province__Champagne  province__Colchagua Valley  \\\n",
       "0                        0                    0                           0   \n",
       "1                        0                    0                           0   \n",
       "2                        0                    0                           0   \n",
       "3                        0                    0                           0   \n",
       "4                        0                    0                           0   \n",
       "\n",
       "   province__Douro  province__Loire Valley  province__Marlborough  \\\n",
       "0                0                       0                      0   \n",
       "1                1                       0                      0   \n",
       "2                0                       0                      0   \n",
       "3                0                       0                      0   \n",
       "4                0                       0                      0   \n",
       "\n",
       "   province__Mendoza Province  province__Mosel  province__New York  \\\n",
       "0                           0                0                   0   \n",
       "1                           0                0                   0   \n",
       "2                           0                0                   0   \n",
       "3                           0                0                   0   \n",
       "4                           0                0                   0   \n",
       "\n",
       "   province__Northeastern Italy  province__Northern Spain  province__Oregon  \\\n",
       "0                             0                         0                 0   \n",
       "1                             0                         0                 0   \n",
       "2                             0                         0                 1   \n",
       "3                             0                         0                 0   \n",
       "4                             0                         0                 1   \n",
       "\n",
       "   province__Other  province__Piedmont  province__Provence  \\\n",
       "0                0                   0                   0   \n",
       "1                0                   0                   0   \n",
       "2                0                   0                   0   \n",
       "3                1                   0                   0   \n",
       "4                0                   0                   0   \n",
       "\n",
       "   province__Rhône Valley  province__Sicily & Sardinia  \\\n",
       "0                       0                            1   \n",
       "1                       0                            0   \n",
       "2                       0                            0   \n",
       "3                       0                            0   \n",
       "4                       0                            0   \n",
       "\n",
       "   province__South Australia  province__Southern Italy  \\\n",
       "0                          0                         0   \n",
       "1                          0                         0   \n",
       "2                          0                         0   \n",
       "3                          0                         0   \n",
       "4                          0                         0   \n",
       "\n",
       "   province__Southwest France  province__Tuscany  province__Veneto  \\\n",
       "0                           0                  0                 0   \n",
       "1                           0                  0                 0   \n",
       "2                           0                  0                 0   \n",
       "3                           0                  0                 0   \n",
       "4                           0                  0                 0   \n",
       "\n",
       "   province__Virginia  province__Washington  region__Alexander Valley  \\\n",
       "0                   0                     0                         0   \n",
       "1                   0                     0                         0   \n",
       "2                   0                     0                         0   \n",
       "3                   0                     0                         0   \n",
       "4                   0                     0                         0   \n",
       "\n",
       "   region__Alsace  region__Alto Adige  region__Anderson Valley  \\\n",
       "0               0                   0                        0   \n",
       "1               0                   0                        0   \n",
       "2               0                   0                        0   \n",
       "3               0                   0                        0   \n",
       "4               0                   0                        0   \n",
       "\n",
       "   region__Barbaresco  region__Barolo  region__Bordeaux  \\\n",
       "0                   0               0                 0   \n",
       "1                   0               0                 0   \n",
       "2                   0               0                 0   \n",
       "3                   0               0                 0   \n",
       "4                   0               0                 0   \n",
       "\n",
       "   region__Bordeaux Blanc  region__Brunello di Montalcino  region__Cahors  \\\n",
       "0                       0                               0               0   \n",
       "1                       0                               0               0   \n",
       "2                       0                               0               0   \n",
       "3                       0                               0               0   \n",
       "4                       0                               0               0   \n",
       "\n",
       "   region__California  region__Carneros  region__Cava  region__Central Coast  \\\n",
       "0                   0                 0             0                      0   \n",
       "1                   0                 0             0                      0   \n",
       "2                   0                 0             0                      0   \n",
       "3                   0                 0             0                      0   \n",
       "4                   0                 0             0                      0   \n",
       "\n",
       "   region__Chablis  region__Champagne  region__Chianti Classico  \\\n",
       "0                0                  0                         0   \n",
       "1                0                  0                         0   \n",
       "2                0                  0                         0   \n",
       "3                0                  0                         0   \n",
       "4                0                  0                         0   \n",
       "\n",
       "   region__Columbia Valley (WA)  region__Côtes de Provence  \\\n",
       "0                             0                          0   \n",
       "1                             0                          0   \n",
       "2                             0                          0   \n",
       "3                             0                          0   \n",
       "4                             0                          0   \n",
       "\n",
       "   region__Dry Creek Valley  region__Dundee Hills  region__Finger Lakes  \\\n",
       "0                         0                     0                     0   \n",
       "1                         0                     0                     0   \n",
       "2                         0                     0                     0   \n",
       "3                         0                     0                     0   \n",
       "4                         0                     0                     0   \n",
       "\n",
       "   region__Horse Heaven Hills  region__Lodi  region__Mendoza  \\\n",
       "0                           0             0                0   \n",
       "1                           0             0                0   \n",
       "2                           0             0                0   \n",
       "3                           0             0                0   \n",
       "4                           0             0                0   \n",
       "\n",
       "   region__Napa Valley  region__North Fork of Long Island  region__Oregon  \\\n",
       "0                    0                                  0               0   \n",
       "1                    0                                  0               0   \n",
       "2                    0                                  0               0   \n",
       "3                    0                                  0               0   \n",
       "4                    0                                  0               0   \n",
       "\n",
       "   region__Other  region__Paso Robles  region__Red Mountain  \\\n",
       "0              1                    0                     0   \n",
       "1              1                    0                     0   \n",
       "2              0                    0                     0   \n",
       "3              1                    0                     0   \n",
       "4              0                    0                     0   \n",
       "\n",
       "   region__Ribera del Duero  region__Rioja  region__Russian River Valley  \\\n",
       "0                         0              0                             0   \n",
       "1                         0              0                             0   \n",
       "2                         0              0                             0   \n",
       "3                         0              0                             0   \n",
       "4                         0              0                             0   \n",
       "\n",
       "   region__Saint-Émilion  region__Sancerre  region__Santa Barbara County  \\\n",
       "0                      0                 0                             0   \n",
       "1                      0                 0                             0   \n",
       "2                      0                 0                             0   \n",
       "3                      0                 0                             0   \n",
       "4                      0                 0                             0   \n",
       "\n",
       "   region__Santa Cruz Mountains  region__Santa Lucia Highlands  \\\n",
       "0                             0                              0   \n",
       "1                             0                              0   \n",
       "2                             0                              0   \n",
       "3                             0                              0   \n",
       "4                             0                              0   \n",
       "\n",
       "   region__Santa Maria Valley  region__Santa Ynez Valley  region__Sicilia  \\\n",
       "0                           0                          0                0   \n",
       "1                           0                          0                0   \n",
       "2                           0                          0                0   \n",
       "3                           0                          0                0   \n",
       "4                           0                          0                0   \n",
       "\n",
       "   region__Sonoma Coast  region__Sonoma County  region__Sonoma Valley  \\\n",
       "0                     0                      0                      0   \n",
       "1                     0                      0                      0   \n",
       "2                     0                      0                      0   \n",
       "3                     0                      0                      0   \n",
       "4                     0                      0                      0   \n",
       "\n",
       "   region__Sta. Rita Hills  region__Toscana  region__Virginia  \\\n",
       "0                        0                0                 0   \n",
       "1                        0                0                 0   \n",
       "2                        0                0                 0   \n",
       "3                        0                0                 0   \n",
       "4                        0                0                 0   \n",
       "\n",
       "   region__Walla Walla Valley (WA)  region__Willamette Valley  \\\n",
       "0                                0                          0   \n",
       "1                                0                          0   \n",
       "2                                0                          1   \n",
       "3                                0                          0   \n",
       "4                                0                          1   \n",
       "\n",
       "   region__Yakima Valley  variety__Aglianico  variety__Albariño  \\\n",
       "0                      0                   0                  0   \n",
       "1                      0                   0                  0   \n",
       "2                      0                   0                  0   \n",
       "3                      0                   0                  0   \n",
       "4                      0                   0                  0   \n",
       "\n",
       "   variety__Barbera  variety__Bordeaux-style Red Blend  \\\n",
       "0                 0                                  0   \n",
       "1                 0                                  0   \n",
       "2                 0                                  0   \n",
       "3                 0                                  0   \n",
       "4                 0                                  0   \n",
       "\n",
       "   variety__Bordeaux-style White Blend  variety__Cabernet Franc  \\\n",
       "0                                    0                        0   \n",
       "1                                    0                        0   \n",
       "2                                    0                        0   \n",
       "3                                    0                        0   \n",
       "4                                    0                        0   \n",
       "\n",
       "   variety__Cabernet Sauvignon  variety__Carmenère  variety__Champagne Blend  \\\n",
       "0                            0                   0                         0   \n",
       "1                            0                   0                         0   \n",
       "2                            0                   0                         0   \n",
       "3                            0                   0                         0   \n",
       "4                            0                   0                         0   \n",
       "\n",
       "   variety__Chardonnay  variety__Chenin Blanc  \\\n",
       "0                    0                      0   \n",
       "1                    0                      0   \n",
       "2                    0                      0   \n",
       "3                    0                      0   \n",
       "4                    0                      0   \n",
       "\n",
       "   variety__Corvina, Rondinella, Molinara  variety__Gamay  variety__Garnacha  \\\n",
       "0                                       0               0                  0   \n",
       "1                                       0               0                  0   \n",
       "2                                       0               0                  0   \n",
       "3                                       0               0                  0   \n",
       "4                                       0               0                  0   \n",
       "\n",
       "   variety__Gewürztraminer  variety__Glera  variety__Grenache  \\\n",
       "0                        0               0                  0   \n",
       "1                        0               0                  0   \n",
       "2                        0               0                  0   \n",
       "3                        0               0                  0   \n",
       "4                        0               0                  0   \n",
       "\n",
       "   variety__Grüner Veltliner  variety__Malbec  variety__Melon  \\\n",
       "0                          0                0               0   \n",
       "1                          0                0               0   \n",
       "2                          0                0               0   \n",
       "3                          0                0               0   \n",
       "4                          0                0               0   \n",
       "\n",
       "   variety__Merlot  variety__Moscato  variety__Nebbiolo  \\\n",
       "0                0                 0                  0   \n",
       "1                0                 0                  0   \n",
       "2                0                 0                  0   \n",
       "3                0                 0                  0   \n",
       "4                0                 0                  0   \n",
       "\n",
       "   variety__Nero d'Avola  variety__Other  variety__Petite Sirah  \\\n",
       "0                      0               0                      0   \n",
       "1                      0               0                      0   \n",
       "2                      0               0                      0   \n",
       "3                      0               0                      0   \n",
       "4                      0               0                      0   \n",
       "\n",
       "   variety__Pinot Blanc  variety__Pinot Grigio  variety__Pinot Gris  \\\n",
       "0                     0                      0                    0   \n",
       "1                     0                      0                    0   \n",
       "2                     0                      0                    1   \n",
       "3                     0                      0                    0   \n",
       "4                     0                      0                    0   \n",
       "\n",
       "   variety__Pinot Noir  variety__Port  variety__Portuguese Red  \\\n",
       "0                    0              0                        0   \n",
       "1                    0              0                        1   \n",
       "2                    0              0                        0   \n",
       "3                    0              0                        0   \n",
       "4                    1              0                        0   \n",
       "\n",
       "   variety__Portuguese White  variety__Red Blend  \\\n",
       "0                          0                   0   \n",
       "1                          0                   0   \n",
       "2                          0                   0   \n",
       "3                          0                   0   \n",
       "4                          0                   0   \n",
       "\n",
       "   variety__Rhône-style Red Blend  variety__Rhône-style White Blend  \\\n",
       "0                               0                                 0   \n",
       "1                               0                                 0   \n",
       "2                               0                                 0   \n",
       "3                               0                                 0   \n",
       "4                               0                                 0   \n",
       "\n",
       "   variety__Riesling  variety__Rosé  variety__Sangiovese  \\\n",
       "0                  0              0                    0   \n",
       "1                  0              0                    0   \n",
       "2                  0              0                    0   \n",
       "3                  1              0                    0   \n",
       "4                  0              0                    0   \n",
       "\n",
       "   variety__Sangiovese Grosso  variety__Sauvignon  variety__Sauvignon Blanc  \\\n",
       "0                           0                   0                         0   \n",
       "1                           0                   0                         0   \n",
       "2                           0                   0                         0   \n",
       "3                           0                   0                         0   \n",
       "4                           0                   0                         0   \n",
       "\n",
       "   variety__Shiraz  variety__Sparkling Blend  variety__Syrah  \\\n",
       "0                0                         0               0   \n",
       "1                0                         0               0   \n",
       "2                0                         0               0   \n",
       "3                0                         0               0   \n",
       "4                0                         0               0   \n",
       "\n",
       "   variety__Tempranillo  variety__Tempranillo Blend  variety__Verdejo  \\\n",
       "0                     0                           0                 0   \n",
       "1                     0                           0                 0   \n",
       "2                     0                           0                 0   \n",
       "3                     0                           0                 0   \n",
       "4                     0                           0                 0   \n",
       "\n",
       "   variety__Viognier  variety__White Blend  variety__Zinfandel  \n",
       "0                  0                     1                   0  \n",
       "1                  0                     0                   0  \n",
       "2                  0                     0                   0  \n",
       "3                  0                     0                   0  \n",
       "4                  0                     0                   0  "
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "training_model.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(129971, 150)"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "training_model.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "description                                  0\n",
       "points                                       0\n",
       "price                                     8996\n",
       "winery                                       0\n",
       "country__Argentina                           0\n",
       "country__Australia                           0\n",
       "country__Austria                             0\n",
       "country__Chile                               0\n",
       "country__France                              0\n",
       "country__Germany                             0\n",
       "country__Italy                               0\n",
       "country__New Zealand                         0\n",
       "country__Other                               0\n",
       "country__Portugal                            0\n",
       "country__South Africa                        0\n",
       "country__Spain                               0\n",
       "country__US                                  0\n",
       "province__Alentejano                         0\n",
       "province__Alsace                             0\n",
       "province__Beaujolais                         0\n",
       "province__Bordeaux                           0\n",
       "province__Burgundy                           0\n",
       "province__California                         0\n",
       "province__Catalonia                          0\n",
       "province__Central Italy                      0\n",
       "province__Champagne                          0\n",
       "province__Colchagua Valley                   0\n",
       "province__Douro                              0\n",
       "province__Loire Valley                       0\n",
       "province__Marlborough                        0\n",
       "province__Mendoza Province                   0\n",
       "province__Mosel                              0\n",
       "province__New York                           0\n",
       "province__Northeastern Italy                 0\n",
       "province__Northern Spain                     0\n",
       "province__Oregon                             0\n",
       "province__Other                              0\n",
       "province__Piedmont                           0\n",
       "province__Provence                           0\n",
       "province__Rhône Valley                       0\n",
       "province__Sicily & Sardinia                  0\n",
       "province__South Australia                    0\n",
       "province__Southern Italy                     0\n",
       "province__Southwest France                   0\n",
       "province__Tuscany                            0\n",
       "province__Veneto                             0\n",
       "province__Virginia                           0\n",
       "province__Washington                         0\n",
       "region__Alexander Valley                     0\n",
       "region__Alsace                               0\n",
       "region__Alto Adige                           0\n",
       "region__Anderson Valley                      0\n",
       "region__Barbaresco                           0\n",
       "region__Barolo                               0\n",
       "region__Bordeaux                             0\n",
       "region__Bordeaux Blanc                       0\n",
       "region__Brunello di Montalcino               0\n",
       "region__Cahors                               0\n",
       "region__California                           0\n",
       "region__Carneros                             0\n",
       "region__Cava                                 0\n",
       "region__Central Coast                        0\n",
       "region__Chablis                              0\n",
       "region__Champagne                            0\n",
       "region__Chianti Classico                     0\n",
       "region__Columbia Valley (WA)                 0\n",
       "region__Côtes de Provence                    0\n",
       "region__Dry Creek Valley                     0\n",
       "region__Dundee Hills                         0\n",
       "region__Finger Lakes                         0\n",
       "region__Horse Heaven Hills                   0\n",
       "region__Lodi                                 0\n",
       "region__Mendoza                              0\n",
       "region__Napa Valley                          0\n",
       "region__North Fork of Long Island            0\n",
       "region__Oregon                               0\n",
       "region__Other                                0\n",
       "region__Paso Robles                          0\n",
       "region__Red Mountain                         0\n",
       "region__Ribera del Duero                     0\n",
       "region__Rioja                                0\n",
       "region__Russian River Valley                 0\n",
       "region__Saint-Émilion                        0\n",
       "region__Sancerre                             0\n",
       "region__Santa Barbara County                 0\n",
       "region__Santa Cruz Mountains                 0\n",
       "region__Santa Lucia Highlands                0\n",
       "region__Santa Maria Valley                   0\n",
       "region__Santa Ynez Valley                    0\n",
       "region__Sicilia                              0\n",
       "region__Sonoma Coast                         0\n",
       "region__Sonoma County                        0\n",
       "region__Sonoma Valley                        0\n",
       "region__Sta. Rita Hills                      0\n",
       "region__Toscana                              0\n",
       "region__Virginia                             0\n",
       "region__Walla Walla Valley (WA)              0\n",
       "region__Willamette Valley                    0\n",
       "region__Yakima Valley                        0\n",
       "variety__Aglianico                           0\n",
       "variety__Albariño                            0\n",
       "variety__Barbera                             0\n",
       "variety__Bordeaux-style Red Blend            0\n",
       "variety__Bordeaux-style White Blend          0\n",
       "variety__Cabernet Franc                      0\n",
       "variety__Cabernet Sauvignon                  0\n",
       "variety__Carmenère                           0\n",
       "variety__Champagne Blend                     0\n",
       "variety__Chardonnay                          0\n",
       "variety__Chenin Blanc                        0\n",
       "variety__Corvina, Rondinella, Molinara       0\n",
       "variety__Gamay                               0\n",
       "variety__Garnacha                            0\n",
       "variety__Gewürztraminer                      0\n",
       "variety__Glera                               0\n",
       "variety__Grenache                            0\n",
       "variety__Grüner Veltliner                    0\n",
       "variety__Malbec                              0\n",
       "variety__Melon                               0\n",
       "variety__Merlot                              0\n",
       "variety__Moscato                             0\n",
       "variety__Nebbiolo                            0\n",
       "variety__Nero d'Avola                        0\n",
       "variety__Other                               0\n",
       "variety__Petite Sirah                        0\n",
       "variety__Pinot Blanc                         0\n",
       "variety__Pinot Grigio                        0\n",
       "variety__Pinot Gris                          0\n",
       "variety__Pinot Noir                          0\n",
       "variety__Port                                0\n",
       "variety__Portuguese Red                      0\n",
       "variety__Portuguese White                    0\n",
       "variety__Red Blend                           0\n",
       "variety__Rhône-style Red Blend               0\n",
       "variety__Rhône-style White Blend             0\n",
       "variety__Riesling                            0\n",
       "variety__Rosé                                0\n",
       "variety__Sangiovese                          0\n",
       "variety__Sangiovese Grosso                   0\n",
       "variety__Sauvignon                           0\n",
       "variety__Sauvignon Blanc                     0\n",
       "variety__Shiraz                              0\n",
       "variety__Sparkling Blend                     0\n",
       "variety__Syrah                               0\n",
       "variety__Tempranillo                         0\n",
       "variety__Tempranillo Blend                   0\n",
       "variety__Verdejo                             0\n",
       "variety__Viognier                            0\n",
       "variety__White Blend                         0\n",
       "variety__Zinfandel                           0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "training_model.isna().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Dropped NA values from Price"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "training_model.dropna(inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "description                               0\n",
       "points                                    0\n",
       "price                                     0\n",
       "winery                                    0\n",
       "country__Argentina                        0\n",
       "country__Australia                        0\n",
       "country__Austria                          0\n",
       "country__Chile                            0\n",
       "country__France                           0\n",
       "country__Germany                          0\n",
       "country__Italy                            0\n",
       "country__New Zealand                      0\n",
       "country__Other                            0\n",
       "country__Portugal                         0\n",
       "country__South Africa                     0\n",
       "country__Spain                            0\n",
       "country__US                               0\n",
       "province__Alentejano                      0\n",
       "province__Alsace                          0\n",
       "province__Beaujolais                      0\n",
       "province__Bordeaux                        0\n",
       "province__Burgundy                        0\n",
       "province__California                      0\n",
       "province__Catalonia                       0\n",
       "province__Central Italy                   0\n",
       "province__Champagne                       0\n",
       "province__Colchagua Valley                0\n",
       "province__Douro                           0\n",
       "province__Loire Valley                    0\n",
       "province__Marlborough                     0\n",
       "province__Mendoza Province                0\n",
       "province__Mosel                           0\n",
       "province__New York                        0\n",
       "province__Northeastern Italy              0\n",
       "province__Northern Spain                  0\n",
       "province__Oregon                          0\n",
       "province__Other                           0\n",
       "province__Piedmont                        0\n",
       "province__Provence                        0\n",
       "province__Rhône Valley                    0\n",
       "province__Sicily & Sardinia               0\n",
       "province__South Australia                 0\n",
       "province__Southern Italy                  0\n",
       "province__Southwest France                0\n",
       "province__Tuscany                         0\n",
       "province__Veneto                          0\n",
       "province__Virginia                        0\n",
       "province__Washington                      0\n",
       "region__Alexander Valley                  0\n",
       "region__Alsace                            0\n",
       "region__Alto Adige                        0\n",
       "region__Anderson Valley                   0\n",
       "region__Barbaresco                        0\n",
       "region__Barolo                            0\n",
       "region__Bordeaux                          0\n",
       "region__Bordeaux Blanc                    0\n",
       "region__Brunello di Montalcino            0\n",
       "region__Cahors                            0\n",
       "region__California                        0\n",
       "region__Carneros                          0\n",
       "region__Cava                              0\n",
       "region__Central Coast                     0\n",
       "region__Chablis                           0\n",
       "region__Champagne                         0\n",
       "region__Chianti Classico                  0\n",
       "region__Columbia Valley (WA)              0\n",
       "region__Côtes de Provence                 0\n",
       "region__Dry Creek Valley                  0\n",
       "region__Dundee Hills                      0\n",
       "region__Finger Lakes                      0\n",
       "region__Horse Heaven Hills                0\n",
       "region__Lodi                              0\n",
       "region__Mendoza                           0\n",
       "region__Napa Valley                       0\n",
       "region__North Fork of Long Island         0\n",
       "region__Oregon                            0\n",
       "region__Other                             0\n",
       "region__Paso Robles                       0\n",
       "region__Red Mountain                      0\n",
       "region__Ribera del Duero                  0\n",
       "region__Rioja                             0\n",
       "region__Russian River Valley              0\n",
       "region__Saint-Émilion                     0\n",
       "region__Sancerre                          0\n",
       "region__Santa Barbara County              0\n",
       "region__Santa Cruz Mountains              0\n",
       "region__Santa Lucia Highlands             0\n",
       "region__Santa Maria Valley                0\n",
       "region__Santa Ynez Valley                 0\n",
       "region__Sicilia                           0\n",
       "region__Sonoma Coast                      0\n",
       "region__Sonoma County                     0\n",
       "region__Sonoma Valley                     0\n",
       "region__Sta. Rita Hills                   0\n",
       "region__Toscana                           0\n",
       "region__Virginia                          0\n",
       "region__Walla Walla Valley (WA)           0\n",
       "region__Willamette Valley                 0\n",
       "region__Yakima Valley                     0\n",
       "variety__Aglianico                        0\n",
       "variety__Albariño                         0\n",
       "variety__Barbera                          0\n",
       "variety__Bordeaux-style Red Blend         0\n",
       "variety__Bordeaux-style White Blend       0\n",
       "variety__Cabernet Franc                   0\n",
       "variety__Cabernet Sauvignon               0\n",
       "variety__Carmenère                        0\n",
       "variety__Champagne Blend                  0\n",
       "variety__Chardonnay                       0\n",
       "variety__Chenin Blanc                     0\n",
       "variety__Corvina, Rondinella, Molinara    0\n",
       "variety__Gamay                            0\n",
       "variety__Garnacha                         0\n",
       "variety__Gewürztraminer                   0\n",
       "variety__Glera                            0\n",
       "variety__Grenache                         0\n",
       "variety__Grüner Veltliner                 0\n",
       "variety__Malbec                           0\n",
       "variety__Melon                            0\n",
       "variety__Merlot                           0\n",
       "variety__Moscato                          0\n",
       "variety__Nebbiolo                         0\n",
       "variety__Nero d'Avola                     0\n",
       "variety__Other                            0\n",
       "variety__Petite Sirah                     0\n",
       "variety__Pinot Blanc                      0\n",
       "variety__Pinot Grigio                     0\n",
       "variety__Pinot Gris                       0\n",
       "variety__Pinot Noir                       0\n",
       "variety__Port                             0\n",
       "variety__Portuguese Red                   0\n",
       "variety__Portuguese White                 0\n",
       "variety__Red Blend                        0\n",
       "variety__Rhône-style Red Blend            0\n",
       "variety__Rhône-style White Blend          0\n",
       "variety__Riesling                         0\n",
       "variety__Rosé                             0\n",
       "variety__Sangiovese                       0\n",
       "variety__Sangiovese Grosso                0\n",
       "variety__Sauvignon                        0\n",
       "variety__Sauvignon Blanc                  0\n",
       "variety__Shiraz                           0\n",
       "variety__Sparkling Blend                  0\n",
       "variety__Syrah                            0\n",
       "variety__Tempranillo                      0\n",
       "variety__Tempranillo Blend                0\n",
       "variety__Verdejo                          0\n",
       "variety__Viognier                         0\n",
       "variety__White Blend                      0\n",
       "variety__Zinfandel                        0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "training_model.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(120975, 150)"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "training_model.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Created a log column of price to assist in normalizing the variance in price"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "training_model['log_price'] = np.log(training_model['price'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Turn all columns into a list to include/exclude in feature selection"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "feature_list = list(training_model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "features = [\n",
    " #'description',\n",
    " 'log_price',\n",
    " #'price',   \n",
    " #'winery',\n",
    " 'country__Argentina',\n",
    " 'country__Australia',\n",
    " 'country__Austria',\n",
    " 'country__Chile',\n",
    " 'country__France',\n",
    " 'country__Germany',\n",
    " 'country__Italy',\n",
    " 'country__New Zealand',\n",
    " 'country__Other',\n",
    " 'country__Portugal',\n",
    " 'country__South Africa',\n",
    " 'country__Spain',\n",
    " 'country__US',\n",
    " 'province__Alentejano',\n",
    " 'province__Alsace',\n",
    " 'province__Beaujolais',\n",
    " 'province__Bordeaux',\n",
    " 'province__Burgundy',\n",
    " 'province__California',\n",
    " 'province__Catalonia',\n",
    " 'province__Central Italy',\n",
    " 'province__Champagne',\n",
    " 'province__Colchagua Valley',\n",
    " 'province__Douro',\n",
    " 'province__Loire Valley',\n",
    " 'province__Marlborough',\n",
    " 'province__Mendoza Province',\n",
    " 'province__Mosel',\n",
    " 'province__New York',\n",
    " 'province__Northeastern Italy',\n",
    " 'province__Northern Spain',\n",
    " 'province__Oregon',\n",
    " 'province__Other',\n",
    " 'province__Piedmont',\n",
    " 'province__Provence',\n",
    " 'province__Rhône Valley',\n",
    " 'province__Sicily & Sardinia',\n",
    " 'province__South Australia',\n",
    " 'province__Southern Italy',\n",
    " 'province__Southwest France',\n",
    " 'province__Tuscany',\n",
    " 'province__Veneto',\n",
    " 'province__Virginia',\n",
    " 'province__Washington',\n",
    " 'region__Alexander Valley',\n",
    " 'region__Alsace',\n",
    " 'region__Alto Adige',\n",
    " 'region__Anderson Valley',\n",
    " 'region__Barbaresco',\n",
    " 'region__Barolo',\n",
    " 'region__Bordeaux',\n",
    " 'region__Bordeaux Blanc',\n",
    " 'region__Brunello di Montalcino',\n",
    " 'region__Cahors',\n",
    " 'region__California',\n",
    " 'region__Carneros',\n",
    " 'region__Cava',\n",
    " 'region__Central Coast',\n",
    " 'region__Chablis',\n",
    " 'region__Champagne',\n",
    " 'region__Chianti Classico',\n",
    " 'region__Columbia Valley (WA)',\n",
    " 'region__Côtes de Provence',\n",
    " 'region__Dry Creek Valley',\n",
    " 'region__Dundee Hills',\n",
    " 'region__Finger Lakes',\n",
    " 'region__Horse Heaven Hills',\n",
    " 'region__Lodi',\n",
    " 'region__Mendoza',\n",
    " 'region__Napa Valley',\n",
    " 'region__North Fork of Long Island',\n",
    " 'region__Oregon',\n",
    " 'region__Other',\n",
    " 'region__Paso Robles',\n",
    " 'region__Red Mountain',\n",
    " 'region__Ribera del Duero',\n",
    " 'region__Rioja',\n",
    " 'region__Russian River Valley',\n",
    " 'region__Saint-Émilion',\n",
    " 'region__Sancerre',\n",
    " 'region__Santa Barbara County',\n",
    " 'region__Santa Cruz Mountains',\n",
    " 'region__Santa Lucia Highlands',\n",
    " 'region__Santa Maria Valley',\n",
    " 'region__Santa Ynez Valley',\n",
    " 'region__Sicilia',\n",
    " 'region__Sonoma Coast',\n",
    " 'region__Sonoma County',\n",
    " 'region__Sonoma Valley',\n",
    " 'region__Sta. Rita Hills',\n",
    " 'region__Toscana',\n",
    " 'region__Virginia',\n",
    " 'region__Walla Walla Valley (WA)',\n",
    " 'region__Willamette Valley',\n",
    " 'region__Yakima Valley',\n",
    " 'variety__Aglianico',\n",
    " 'variety__Albariño',\n",
    " 'variety__Barbera',\n",
    " 'variety__Bordeaux-style Red Blend',\n",
    " 'variety__Bordeaux-style White Blend',\n",
    " 'variety__Cabernet Franc',\n",
    " 'variety__Cabernet Sauvignon',\n",
    " 'variety__Carmenère',\n",
    " 'variety__Champagne Blend',\n",
    " 'variety__Chardonnay',\n",
    " 'variety__Chenin Blanc',\n",
    " 'variety__Corvina, Rondinella, Molinara',\n",
    " 'variety__Gamay',\n",
    " 'variety__Garnacha',\n",
    " 'variety__Gewürztraminer',\n",
    " 'variety__Glera',\n",
    " 'variety__Grenache',\n",
    " 'variety__Grüner Veltliner',\n",
    " 'variety__Malbec',\n",
    " 'variety__Melon',\n",
    " 'variety__Merlot',\n",
    " 'variety__Moscato',\n",
    " 'variety__Nebbiolo',\n",
    " \"variety__Nero d'Avola\",\n",
    " 'variety__Other',\n",
    " 'variety__Petite Sirah',\n",
    " 'variety__Pinot Blanc',\n",
    " 'variety__Pinot Grigio',\n",
    " 'variety__Pinot Gris',\n",
    " 'variety__Pinot Noir',\n",
    " 'variety__Port',\n",
    " 'variety__Portuguese Red',\n",
    " 'variety__Portuguese White',\n",
    " 'variety__Red Blend',\n",
    " 'variety__Rhône-style Red Blend',\n",
    " 'variety__Rhône-style White Blend',\n",
    " 'variety__Riesling',\n",
    " 'variety__Rosé',\n",
    " 'variety__Sangiovese',\n",
    " 'variety__Sangiovese Grosso',\n",
    " 'variety__Sauvignon',\n",
    " 'variety__Sauvignon Blanc',\n",
    " 'variety__Shiraz',\n",
    " 'variety__Sparkling Blend',\n",
    " 'variety__Syrah',\n",
    " 'variety__Tempranillo',\n",
    " 'variety__Tempranillo Blend',\n",
    " 'variety__Verdejo',\n",
    " 'variety__Viognier',\n",
    " 'variety__White Blend',\n",
    " 'variety__Zinfandel'\n",
    "]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "region__California                       -0.134260\n",
       "country__Chile                           -0.123161\n",
       "country__Argentina                       -0.100632\n",
       "country__Spain                           -0.089057\n",
       "province__Other                          -0.087673\n",
       "region__Mendoza                          -0.087363\n",
       "province__Mendoza Province               -0.086742\n",
       "variety__Rosé                            -0.083998\n",
       "province__Virginia                       -0.073671\n",
       "region__Other                            -0.068651\n",
       "variety__Sauvignon Blanc                 -0.067573\n",
       "region__Virginia                         -0.066307\n",
       "variety__Pinot Grigio                    -0.064760\n",
       "variety__Merlot                          -0.064613\n",
       "province__New York                       -0.061289\n",
       "province__Northern Spain                 -0.059202\n",
       "region__Bordeaux                         -0.053021\n",
       "region__Finger Lakes                     -0.049504\n",
       "variety__White Blend                     -0.048651\n",
       "variety__Other                           -0.048408\n",
       "variety__Portuguese White                -0.043877\n",
       "variety__Garnacha                        -0.042284\n",
       "region__Lodi                             -0.041333\n",
       "variety__Carmenère                       -0.040993\n",
       "region__Central Coast                    -0.040368\n",
       "variety__Moscato                         -0.037596\n",
       "region__Bordeaux Blanc                   -0.036310\n",
       "variety__Tempranillo                     -0.036187\n",
       "province__Colchagua Valley               -0.035960\n",
       "region__Sonoma County                    -0.034550\n",
       "variety__Verdejo                         -0.033797\n",
       "region__Cava                             -0.033172\n",
       "province__Central Italy                  -0.031266\n",
       "province__Catalonia                      -0.030947\n",
       "variety__Zinfandel                       -0.029576\n",
       "province__Bordeaux                       -0.027924\n",
       "province__Veneto                         -0.025677\n",
       "region__Rioja                            -0.025149\n",
       "variety__Glera                           -0.024531\n",
       "region__Paso Robles                      -0.024309\n",
       "country__Other                           -0.024171\n",
       "region__Sicilia                          -0.023988\n",
       "region__North Fork of Long Island        -0.022198\n",
       "variety__Malbec                          -0.021952\n",
       "country__South Africa                    -0.020159\n",
       "variety__Viognier                        -0.019353\n",
       "province__Southern Italy                 -0.017778\n",
       "region__Dry Creek Valley                 -0.017194\n",
       "province__Northeastern Italy             -0.016407\n",
       "variety__Barbera                         -0.015753\n",
       "variety__Nero d'Avola                    -0.015583\n",
       "variety__Sparkling Blend                 -0.014599\n",
       "province__Marlborough                    -0.014513\n",
       "variety__Albariño                        -0.014341\n",
       "variety__Bordeaux-style White Blend      -0.012833\n",
       "region__Côtes de Provence                -0.012533\n",
       "variety__Chardonnay                      -0.012401\n",
       "province__Alentejano                     -0.011653\n",
       "region__Oregon                           -0.011599\n",
       "region__Sonoma Valley                    -0.011148\n",
       "variety__Pinot Blanc                     -0.009814\n",
       "variety__Cabernet Franc                  -0.009503\n",
       "province__Beaujolais                     -0.008859\n",
       "province__Sicily & Sardinia              -0.008611\n",
       "country__Portugal                        -0.007078\n",
       "variety__Gamay                           -0.006709\n",
       "variety__Petite Sirah                    -0.005846\n",
       "province__Provence                       -0.005160\n",
       "country__New Zealand                     -0.004000\n",
       "variety__Red Blend                       -0.003796\n",
       "variety__Tempranillo Blend               -0.003566\n",
       "variety__Sauvignon                       -0.003504\n",
       "region__Alexander Valley                 -0.002987\n",
       "variety__Chenin Blanc                    -0.000363\n",
       "region__Horse Heaven Hills                0.000051\n",
       "region__Santa Barbara County              0.000350\n",
       "variety__Rhône-style White Blend          0.001280\n",
       "region__Ribera del Duero                  0.001506\n",
       "variety__Corvina, Rondinella, Molinara    0.001561\n",
       "variety__Melon                            0.001908\n",
       "province__Loire Valley                    0.003207\n",
       "variety__Pinot Gris                       0.003493\n",
       "region__Alto Adige                        0.004111\n",
       "variety__Gewürztraminer                   0.005510\n",
       "province__Southwest France                0.007428\n",
       "country__Australia                        0.007927\n",
       "region__Santa Ynez Valley                 0.008476\n",
       "variety__Sangiovese                       0.008885\n",
       "region__Chianti Classico                  0.010148\n",
       "region__Carneros                          0.010487\n",
       "region__Yakima Valley                     0.010939\n",
       "variety__Grenache                         0.013079\n",
       "variety__Aglianico                        0.015824\n",
       "variety__Shiraz                           0.016929\n",
       "province__Rhône Valley                    0.017876\n",
       "variety__Cabernet Sauvignon               0.017977\n",
       "region__Columbia Valley (WA)              0.018324\n",
       "region__Sancerre                          0.019046\n",
       "variety__Portuguese Red                   0.019759\n",
       "province__South Australia                 0.021981\n",
       "province__Douro                           0.022923\n",
       "variety__Rhône-style Red Blend            0.025424\n",
       "country__Italy                            0.025995\n",
       "variety__Bordeaux-style Red Blend         0.026134\n",
       "region__Toscana                           0.026880\n",
       "region__Saint-Émilion                     0.027231\n",
       "region__Cahors                            0.029099\n",
       "region__Willamette Valley                 0.030213\n",
       "region__Santa Cruz Mountains              0.030402\n",
       "variety__Port                             0.033572\n",
       "region__Barbaresco                        0.034843\n",
       "region__Red Mountain                      0.038173\n",
       "region__Napa Valley                       0.039979\n",
       "variety__Champagne Blend                  0.040423\n",
       "region__Santa Lucia Highlands             0.041141\n",
       "country__France                           0.042667\n",
       "country__US                               0.042809\n",
       "region__Chablis                           0.044325\n",
       "province__California                      0.044482\n",
       "province__Oregon                          0.044683\n",
       "region__Anderson Valley                   0.046139\n",
       "province__Washington                      0.048065\n",
       "region__Dundee Hills                      0.048308\n",
       "province__Mosel                           0.049085\n",
       "province__Tuscany                         0.050207\n",
       "variety__Grüner Veltliner                 0.051174\n",
       "province__Alsace                          0.052155\n",
       "variety__Syrah                            0.053358\n",
       "region__Alsace                            0.053711\n",
       "variety__Sangiovese Grosso                0.054668\n",
       "region__Santa Maria Valley                0.056314\n",
       "region__Sonoma Coast                      0.056413\n",
       "region__Walla Walla Valley (WA)           0.058164\n",
       "region__Russian River Valley              0.058813\n",
       "province__Piedmont                        0.061841\n",
       "country__Germany                          0.062048\n",
       "province__Burgundy                        0.064918\n",
       "region__Champagne                         0.065039\n",
       "province__Champagne                       0.065039\n",
       "region__Sta. Rita Hills                   0.068322\n",
       "variety__Riesling                         0.069101\n",
       "region__Brunello di Montalcino            0.074597\n",
       "region__Barolo                            0.084733\n",
       "variety__Nebbiolo                         0.087904\n",
       "country__Austria                          0.089418\n",
       "variety__Pinot Noir                       0.111451\n",
       "price                                     0.416167\n",
       "log_price                                 0.611850\n",
       "points                                    1.000000\n",
       "Name: points, dtype: float64"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "training_model.corr()['points'].sort_values(ascending=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# What model to use that includes all features?\n",
    "\n",
    "Rather than running correlation or colinearity on 150 features and selecting a subset of features for a model. Id rather use something like Ridge, Lasso, Random Forest, Decision Tree, that will measure and discount unimportant features"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Regional, Variety, and Price features initiated"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [],
   "source": [
    "X = training_model[features]\n",
    "y = training_model['points']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X,y)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Ridge Model w/ Standard Scaler scoring R2 on train and test sets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/AceJohnson/anaconda3/lib/python3.7/site-packages/sklearn/preprocessing/data.py:645: DataConversionWarning: Data with input dtype uint8, float64 were all converted to float64 by StandardScaler.\n",
      "  return self.partial_fit(X, y)\n",
      "/Users/AceJohnson/anaconda3/lib/python3.7/site-packages/sklearn/base.py:464: DataConversionWarning: Data with input dtype uint8, float64 were all converted to float64 by StandardScaler.\n",
      "  return self.fit(X, **fit_params).transform(X)\n",
      "/Users/AceJohnson/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:8: DataConversionWarning: Data with input dtype uint8, float64 were all converted to float64 by StandardScaler.\n",
      "  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.0 0.4371008970422202\n",
      "0.0 0.4301973383134098\n",
      "\n",
      "0.1 0.4306561854267372\n",
      "0.1 0.4242037500674475\n",
      "\n",
      "0.2 0.4207066847356812\n",
      "0.2 0.41481075464653216\n",
      "\n",
      "0.3 0.4094339526514803\n",
      "0.3 0.4039511574260892\n",
      "\n",
      "0.4 0.3979063254477654\n",
      "0.4 0.39274073782906294\n",
      "\n",
      "0.5 0.38658130256172357\n",
      "0.5 0.38166891986420104\n",
      "\n",
      "0.6 0.3756546754737764\n",
      "0.6 0.3709511129356162\n",
      "\n",
      "0.7 0.3652037387383333\n",
      "0.7 0.36067704445098636\n",
      "\n",
      "0.8 0.3552496811084528\n",
      "0.8 0.3508760949597357\n",
      "\n",
      "0.9 0.34578658378282756\n",
      "0.9 0.3415479356649018\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from sklearn.linear_model import Ridge\n",
    "from sklearn.metrics import r2_score\n",
    "\n",
    "for alpha in range(10):\n",
    "    alpha=alpha/10\n",
    "    scaler = StandardScaler()\n",
    "    X_train = scaler.fit_transform(X_train)\n",
    "    X_test = scaler.transform(X_test)\n",
    "\n",
    "    # Instantiate the model.\n",
    "    #(Alpha of zero has no regularization strength, essentially a basic linear regression.)\n",
    "    ridgereg = Ridge(alpha=alpha, normalize=True)\n",
    "\n",
    "    # Fit the model.\n",
    "    ridgereg.fit(X_train, y_train)\n",
    "\n",
    "    # Predict with fitted model.\n",
    "    predictions = ridgereg.predict(X_test)\n",
    "    #print(np.sqrt(metrics.mean_squared_error(y_test, y_pred)))\n",
    "    training_score = ridgereg.score(X_train,y_train)\n",
    "    testing_score = r2_score(y_test,predictions)\n",
    "    print(alpha,training_score)\n",
    "    print(alpha,testing_score)\n",
    "    print('')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# R2 score of .43 is pretty solid considering the Null Prediction of .13. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Using LOG Price vs Price was a score differance of .43 compared to .30 \n",
    "Something to note for future models that have such a variant feature such as price from $4 to $3,300"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 203,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Build a list of RidgeReg coefficients\n",
    "coef_list=list(zip(features, ridgereg.coef_))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>log_price</td>\n",
       "      <td>0.879086</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>country__Austria</td>\n",
       "      <td>0.139820</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>132</th>\n",
       "      <td>variety__Riesling</td>\n",
       "      <td>0.089804</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>region__Santa Maria Valley</td>\n",
       "      <td>0.070507</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>region__Sta. Rita Hills</td>\n",
       "      <td>0.070317</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>country__Germany</td>\n",
       "      <td>0.060402</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113</th>\n",
       "      <td>variety__Grüner Veltliner</td>\n",
       "      <td>0.058961</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>region__Anderson Valley</td>\n",
       "      <td>0.054761</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93</th>\n",
       "      <td>region__Walla Walla Valley (WA)</td>\n",
       "      <td>0.054446</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>140</th>\n",
       "      <td>variety__Syrah</td>\n",
       "      <td>0.053964</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>127</th>\n",
       "      <td>variety__Portuguese Red</td>\n",
       "      <td>0.051938</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>region__Chablis</td>\n",
       "      <td>0.050793</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>region__Russian River Valley</td>\n",
       "      <td>0.050493</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>region__Sonoma Coast</td>\n",
       "      <td>0.046517</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>region__Alsace</td>\n",
       "      <td>0.044928</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>province__Alsace</td>\n",
       "      <td>0.044392</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>125</th>\n",
       "      <td>variety__Pinot Noir</td>\n",
       "      <td>0.043252</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>region__Dundee Hills</td>\n",
       "      <td>0.043209</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>region__Brunello di Montalcino</td>\n",
       "      <td>0.043155</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>region__Cahors</td>\n",
       "      <td>0.041718</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>province__Washington</td>\n",
       "      <td>0.041569</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>region__Barolo</td>\n",
       "      <td>0.040748</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118</th>\n",
       "      <td>variety__Nebbiolo</td>\n",
       "      <td>0.039461</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>region__Santa Lucia Highlands</td>\n",
       "      <td>0.039144</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>province__Mosel</td>\n",
       "      <td>0.036959</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>country__Portugal</td>\n",
       "      <td>0.035299</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>126</th>\n",
       "      <td>variety__Port</td>\n",
       "      <td>0.034741</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>135</th>\n",
       "      <td>variety__Sangiovese Grosso</td>\n",
       "      <td>0.033636</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>130</th>\n",
       "      <td>variety__Rhône-style Red Blend</td>\n",
       "      <td>0.031740</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>province__Oregon</td>\n",
       "      <td>0.031678</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>variety__Bordeaux-style Red Blend</td>\n",
       "      <td>0.031599</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>province__Douro</td>\n",
       "      <td>0.031356</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>province__Provence</td>\n",
       "      <td>0.029427</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>region__Sancerre</td>\n",
       "      <td>0.027398</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>region__Columbia Valley (WA)</td>\n",
       "      <td>0.026727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>province__Burgundy</td>\n",
       "      <td>0.026291</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>province__South Australia</td>\n",
       "      <td>0.026058</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>region__Red Mountain</td>\n",
       "      <td>0.025036</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>country__France</td>\n",
       "      <td>0.023695</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>region__Champagne</td>\n",
       "      <td>0.023634</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>province__Champagne</td>\n",
       "      <td>0.023634</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>region__Santa Cruz Mountains</td>\n",
       "      <td>0.023585</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138</th>\n",
       "      <td>variety__Shiraz</td>\n",
       "      <td>0.023344</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>province__Southwest France</td>\n",
       "      <td>0.023211</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>province__Rhône Valley</td>\n",
       "      <td>0.022783</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>province__Tuscany</td>\n",
       "      <td>0.022649</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>variety__Aglianico</td>\n",
       "      <td>0.022330</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>province__California</td>\n",
       "      <td>0.021579</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>region__Saint-Émilion</td>\n",
       "      <td>0.018754</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94</th>\n",
       "      <td>region__Willamette Valley</td>\n",
       "      <td>0.018662</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>region__Toscana</td>\n",
       "      <td>0.017096</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>region__Alto Adige</td>\n",
       "      <td>0.016175</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>106</th>\n",
       "      <td>variety__Chenin Blanc</td>\n",
       "      <td>0.015231</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>province__Piedmont</td>\n",
       "      <td>0.014502</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>region__Chianti Classico</td>\n",
       "      <td>0.014121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>region__Ribera del Duero</td>\n",
       "      <td>0.014077</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>province__Loire Valley</td>\n",
       "      <td>0.013648</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115</th>\n",
       "      <td>variety__Melon</td>\n",
       "      <td>0.012929</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>142</th>\n",
       "      <td>variety__Tempranillo Blend</td>\n",
       "      <td>0.012189</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>province__Sicily &amp; Sardinia</td>\n",
       "      <td>0.011575</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>112</th>\n",
       "      <td>variety__Grenache</td>\n",
       "      <td>0.011474</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>country__New Zealand</td>\n",
       "      <td>0.011438</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85</th>\n",
       "      <td>region__Santa Ynez Valley</td>\n",
       "      <td>0.009992</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>region__Yakima Valley</td>\n",
       "      <td>0.009914</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>country__Australia</td>\n",
       "      <td>0.009737</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>114</th>\n",
       "      <td>variety__Malbec</td>\n",
       "      <td>0.009670</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>region__Barbaresco</td>\n",
       "      <td>0.009646</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>108</th>\n",
       "      <td>variety__Gamay</td>\n",
       "      <td>0.008184</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>variety__Bordeaux-style White Blend</td>\n",
       "      <td>0.007728</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>124</th>\n",
       "      <td>variety__Pinot Gris</td>\n",
       "      <td>0.006171</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110</th>\n",
       "      <td>variety__Gewürztraminer</td>\n",
       "      <td>0.003322</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>variety__Albariño</td>\n",
       "      <td>0.003190</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>province__Beaujolais</td>\n",
       "      <td>0.002721</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>country__Italy</td>\n",
       "      <td>0.002508</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>region__Côtes de Provence</td>\n",
       "      <td>0.001189</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77</th>\n",
       "      <td>region__Rioja</td>\n",
       "      <td>0.001119</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>131</th>\n",
       "      <td>variety__Rhône-style White Blend</td>\n",
       "      <td>0.001097</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>country__Other</td>\n",
       "      <td>0.000155</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129</th>\n",
       "      <td>variety__Red Blend</td>\n",
       "      <td>0.000022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>country__South Africa</td>\n",
       "      <td>-0.000991</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>139</th>\n",
       "      <td>variety__Sparkling Blend</td>\n",
       "      <td>-0.001437</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>region__Carneros</td>\n",
       "      <td>-0.002717</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>107</th>\n",
       "      <td>variety__Corvina, Rondinella, Molinara</td>\n",
       "      <td>-0.002720</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>136</th>\n",
       "      <td>variety__Sauvignon</td>\n",
       "      <td>-0.003066</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>province__Colchagua Valley</td>\n",
       "      <td>-0.003294</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102</th>\n",
       "      <td>variety__Cabernet Sauvignon</td>\n",
       "      <td>-0.003312</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>province__Marlborough</td>\n",
       "      <td>-0.003463</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>region__Napa Valley</td>\n",
       "      <td>-0.004716</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>province__Alentejano</td>\n",
       "      <td>-0.005024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>province__Northeastern Italy</td>\n",
       "      <td>-0.005227</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>region__Santa Barbara County</td>\n",
       "      <td>-0.005281</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>variety__Cabernet Franc</td>\n",
       "      <td>-0.005671</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>country__US</td>\n",
       "      <td>-0.005681</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>121</th>\n",
       "      <td>variety__Petite Sirah</td>\n",
       "      <td>-0.006847</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>region__Horse Heaven Hills</td>\n",
       "      <td>-0.008549</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119</th>\n",
       "      <td>variety__Nero d'Avola</td>\n",
       "      <td>-0.009058</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>104</th>\n",
       "      <td>variety__Champagne Blend</td>\n",
       "      <td>-0.009684</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111</th>\n",
       "      <td>variety__Glera</td>\n",
       "      <td>-0.011054</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>province__Catalonia</td>\n",
       "      <td>-0.012682</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>region__Oregon</td>\n",
       "      <td>-0.014415</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120</th>\n",
       "      <td>variety__Other</td>\n",
       "      <td>-0.014592</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>144</th>\n",
       "      <td>variety__Viognier</td>\n",
       "      <td>-0.015461</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td>region__North Fork of Long Island</td>\n",
       "      <td>-0.016217</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>122</th>\n",
       "      <td>variety__Pinot Blanc</td>\n",
       "      <td>-0.016396</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>region__Alexander Valley</td>\n",
       "      <td>-0.016859</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>variety__Barbera</td>\n",
       "      <td>-0.017729</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>region__Cava</td>\n",
       "      <td>-0.018999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>province__Southern Italy</td>\n",
       "      <td>-0.021259</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103</th>\n",
       "      <td>variety__Carmenère</td>\n",
       "      <td>-0.022775</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>105</th>\n",
       "      <td>variety__Chardonnay</td>\n",
       "      <td>-0.023405</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>region__Other</td>\n",
       "      <td>-0.023660</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64</th>\n",
       "      <td>region__Dry Creek Valley</td>\n",
       "      <td>-0.023717</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>143</th>\n",
       "      <td>variety__Verdejo</td>\n",
       "      <td>-0.024597</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>region__Sicilia</td>\n",
       "      <td>-0.025375</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>province__Central Italy</td>\n",
       "      <td>-0.025513</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>province__Bordeaux</td>\n",
       "      <td>-0.026921</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>province__Veneto</td>\n",
       "      <td>-0.026988</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>128</th>\n",
       "      <td>variety__Portuguese White</td>\n",
       "      <td>-0.028029</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>117</th>\n",
       "      <td>variety__Moscato</td>\n",
       "      <td>-0.028862</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>region__Sonoma Valley</td>\n",
       "      <td>-0.029596</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>141</th>\n",
       "      <td>variety__Tempranillo</td>\n",
       "      <td>-0.030298</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>province__Northern Spain</td>\n",
       "      <td>-0.031349</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146</th>\n",
       "      <td>variety__Zinfandel</td>\n",
       "      <td>-0.031489</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>134</th>\n",
       "      <td>variety__Sangiovese</td>\n",
       "      <td>-0.032695</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>region__Bordeaux Blanc</td>\n",
       "      <td>-0.033311</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <td>variety__White Blend</td>\n",
       "      <td>-0.034483</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>region__Finger Lakes</td>\n",
       "      <td>-0.035862</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>region__Lodi</td>\n",
       "      <td>-0.036138</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109</th>\n",
       "      <td>variety__Garnacha</td>\n",
       "      <td>-0.037144</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137</th>\n",
       "      <td>variety__Sauvignon Blanc</td>\n",
       "      <td>-0.041346</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>province__Mendoza Province</td>\n",
       "      <td>-0.043181</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>region__Sonoma County</td>\n",
       "      <td>-0.046799</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>region__Paso Robles</td>\n",
       "      <td>-0.047543</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>region__Central Coast</td>\n",
       "      <td>-0.048061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>region__Mendoza</td>\n",
       "      <td>-0.051907</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>variety__Pinot Grigio</td>\n",
       "      <td>-0.052647</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>province__New York</td>\n",
       "      <td>-0.054476</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>region__Bordeaux</td>\n",
       "      <td>-0.055319</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>country__Spain</td>\n",
       "      <td>-0.059092</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>province__Other</td>\n",
       "      <td>-0.060978</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>region__Virginia</td>\n",
       "      <td>-0.065146</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>country__Argentina</td>\n",
       "      <td>-0.072355</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116</th>\n",
       "      <td>variety__Merlot</td>\n",
       "      <td>-0.075374</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>133</th>\n",
       "      <td>variety__Rosé</td>\n",
       "      <td>-0.078675</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>province__Virginia</td>\n",
       "      <td>-0.082320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>country__Chile</td>\n",
       "      <td>-0.101522</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>region__California</td>\n",
       "      <td>-0.135343</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          0         1\n",
       "0                                 log_price  0.879086\n",
       "3                          country__Austria  0.139820\n",
       "132                       variety__Riesling  0.089804\n",
       "84               region__Santa Maria Valley  0.070507\n",
       "90                  region__Sta. Rita Hills  0.070317\n",
       "6                          country__Germany  0.060402\n",
       "113               variety__Grüner Veltliner  0.058961\n",
       "48                  region__Anderson Valley  0.054761\n",
       "93          region__Walla Walla Valley (WA)  0.054446\n",
       "140                          variety__Syrah  0.053964\n",
       "127                 variety__Portuguese Red  0.051938\n",
       "59                          region__Chablis  0.050793\n",
       "78             region__Russian River Valley  0.050493\n",
       "87                     region__Sonoma Coast  0.046517\n",
       "46                           region__Alsace  0.044928\n",
       "15                         province__Alsace  0.044392\n",
       "125                     variety__Pinot Noir  0.043252\n",
       "65                     region__Dundee Hills  0.043209\n",
       "53           region__Brunello di Montalcino  0.043155\n",
       "54                           region__Cahors  0.041718\n",
       "44                     province__Washington  0.041569\n",
       "50                           region__Barolo  0.040748\n",
       "118                       variety__Nebbiolo  0.039461\n",
       "83            region__Santa Lucia Highlands  0.039144\n",
       "28                          province__Mosel  0.036959\n",
       "10                        country__Portugal  0.035299\n",
       "126                           variety__Port  0.034741\n",
       "135              variety__Sangiovese Grosso  0.033636\n",
       "130          variety__Rhône-style Red Blend  0.031740\n",
       "32                         province__Oregon  0.031678\n",
       "99        variety__Bordeaux-style Red Blend  0.031599\n",
       "24                          province__Douro  0.031356\n",
       "35                       province__Provence  0.029427\n",
       "80                         region__Sancerre  0.027398\n",
       "62             region__Columbia Valley (WA)  0.026727\n",
       "18                       province__Burgundy  0.026291\n",
       "38                province__South Australia  0.026058\n",
       "75                     region__Red Mountain  0.025036\n",
       "5                           country__France  0.023695\n",
       "60                        region__Champagne  0.023634\n",
       "22                      province__Champagne  0.023634\n",
       "82             region__Santa Cruz Mountains  0.023585\n",
       "138                         variety__Shiraz  0.023344\n",
       "40               province__Southwest France  0.023211\n",
       "36                   province__Rhône Valley  0.022783\n",
       "41                        province__Tuscany  0.022649\n",
       "96                       variety__Aglianico  0.022330\n",
       "19                     province__California  0.021579\n",
       "79                    region__Saint-Émilion  0.018754\n",
       "94                region__Willamette Valley  0.018662\n",
       "91                          region__Toscana  0.017096\n",
       "47                       region__Alto Adige  0.016175\n",
       "106                   variety__Chenin Blanc  0.015231\n",
       "34                       province__Piedmont  0.014502\n",
       "61                 region__Chianti Classico  0.014121\n",
       "76                 region__Ribera del Duero  0.014077\n",
       "25                   province__Loire Valley  0.013648\n",
       "115                          variety__Melon  0.012929\n",
       "142              variety__Tempranillo Blend  0.012189\n",
       "37              province__Sicily & Sardinia  0.011575\n",
       "112                       variety__Grenache  0.011474\n",
       "8                      country__New Zealand  0.011438\n",
       "85                region__Santa Ynez Valley  0.009992\n",
       "95                    region__Yakima Valley  0.009914\n",
       "2                        country__Australia  0.009737\n",
       "114                         variety__Malbec  0.009670\n",
       "49                       region__Barbaresco  0.009646\n",
       "108                          variety__Gamay  0.008184\n",
       "100     variety__Bordeaux-style White Blend  0.007728\n",
       "124                     variety__Pinot Gris  0.006171\n",
       "110                 variety__Gewürztraminer  0.003322\n",
       "97                        variety__Albariño  0.003190\n",
       "16                     province__Beaujolais  0.002721\n",
       "7                            country__Italy  0.002508\n",
       "63                region__Côtes de Provence  0.001189\n",
       "77                            region__Rioja  0.001119\n",
       "131        variety__Rhône-style White Blend  0.001097\n",
       "9                            country__Other  0.000155\n",
       "129                      variety__Red Blend  0.000022\n",
       "11                    country__South Africa -0.000991\n",
       "139                variety__Sparkling Blend -0.001437\n",
       "56                         region__Carneros -0.002717\n",
       "107  variety__Corvina, Rondinella, Molinara -0.002720\n",
       "136                      variety__Sauvignon -0.003066\n",
       "23               province__Colchagua Valley -0.003294\n",
       "102             variety__Cabernet Sauvignon -0.003312\n",
       "26                    province__Marlborough -0.003463\n",
       "70                      region__Napa Valley -0.004716\n",
       "14                     province__Alentejano -0.005024\n",
       "30             province__Northeastern Italy -0.005227\n",
       "81             region__Santa Barbara County -0.005281\n",
       "101                 variety__Cabernet Franc -0.005671\n",
       "13                              country__US -0.005681\n",
       "121                   variety__Petite Sirah -0.006847\n",
       "67               region__Horse Heaven Hills -0.008549\n",
       "119                   variety__Nero d'Avola -0.009058\n",
       "104                variety__Champagne Blend -0.009684\n",
       "111                          variety__Glera -0.011054\n",
       "20                      province__Catalonia -0.012682\n",
       "72                           region__Oregon -0.014415\n",
       "120                          variety__Other -0.014592\n",
       "144                       variety__Viognier -0.015461\n",
       "71        region__North Fork of Long Island -0.016217\n",
       "122                    variety__Pinot Blanc -0.016396\n",
       "45                 region__Alexander Valley -0.016859\n",
       "98                         variety__Barbera -0.017729\n",
       "57                             region__Cava -0.018999\n",
       "39                 province__Southern Italy -0.021259\n",
       "103                      variety__Carmenère -0.022775\n",
       "105                     variety__Chardonnay -0.023405\n",
       "73                            region__Other -0.023660\n",
       "64                 region__Dry Creek Valley -0.023717\n",
       "143                        variety__Verdejo -0.024597\n",
       "86                          region__Sicilia -0.025375\n",
       "21                  province__Central Italy -0.025513\n",
       "17                       province__Bordeaux -0.026921\n",
       "42                         province__Veneto -0.026988\n",
       "128               variety__Portuguese White -0.028029\n",
       "117                        variety__Moscato -0.028862\n",
       "89                    region__Sonoma Valley -0.029596\n",
       "141                    variety__Tempranillo -0.030298\n",
       "31                 province__Northern Spain -0.031349\n",
       "146                      variety__Zinfandel -0.031489\n",
       "134                     variety__Sangiovese -0.032695\n",
       "52                   region__Bordeaux Blanc -0.033311\n",
       "145                    variety__White Blend -0.034483\n",
       "66                     region__Finger Lakes -0.035862\n",
       "68                             region__Lodi -0.036138\n",
       "109                       variety__Garnacha -0.037144\n",
       "137                variety__Sauvignon Blanc -0.041346\n",
       "27               province__Mendoza Province -0.043181\n",
       "88                    region__Sonoma County -0.046799\n",
       "74                      region__Paso Robles -0.047543\n",
       "58                    region__Central Coast -0.048061\n",
       "69                          region__Mendoza -0.051907\n",
       "123                   variety__Pinot Grigio -0.052647\n",
       "29                       province__New York -0.054476\n",
       "51                         region__Bordeaux -0.055319\n",
       "12                           country__Spain -0.059092\n",
       "33                          province__Other -0.060978\n",
       "92                         region__Virginia -0.065146\n",
       "1                        country__Argentina -0.072355\n",
       "116                         variety__Merlot -0.075374\n",
       "133                           variety__Rosé -0.078675\n",
       "43                       province__Virginia -0.082320\n",
       "4                            country__Chile -0.101522\n",
       "55                       region__California -0.135343"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Turn list of Redge coefficients into a DataFrame\n",
    "pd.DataFrame(coef_list).sort_values(by = 1 ,  ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {},
   "outputs": [],
   "source": [
    "coef_df = pd.DataFrame(coef_list).sort_values(by = 1 ,  ascending=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [],
   "source": [
    "coef_df = coef_df.rename(columns={1 : 'abs_coef'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {},
   "outputs": [],
   "source": [
    "coef_df = coef_df.rename(columns={0 : 'features'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Created a DataFrame with the 'abs_coef' to have absolute value using the abs() method.\n",
    "coef_df2 = pd.DataFrame (coef_df.abs_coef.abs())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>features</th>\n",
       "      <th>abs_coef</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>region__California</td>\n",
       "      <td>-0.135343</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>country__Chile</td>\n",
       "      <td>-0.101522</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>province__Virginia</td>\n",
       "      <td>-0.082320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>133</th>\n",
       "      <td>variety__Rosé</td>\n",
       "      <td>-0.078675</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116</th>\n",
       "      <td>variety__Merlot</td>\n",
       "      <td>-0.075374</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               features  abs_coef\n",
       "55   region__California -0.135343\n",
       "4        country__Chile -0.101522\n",
       "43   province__Virginia -0.082320\n",
       "133       variety__Rosé -0.078675\n",
       "116     variety__Merlot -0.075374"
      ]
     },
     "execution_count": 127,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "coef_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "metadata": {},
   "outputs": [],
   "source": [
    "coef_df2['feature'] = coef_df['features']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>abs_coef</th>\n",
       "      <th>feature</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.879086</td>\n",
       "      <td>log_price</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.139820</td>\n",
       "      <td>country__Austria</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>0.135343</td>\n",
       "      <td>region__California</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.101522</td>\n",
       "      <td>country__Chile</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>132</th>\n",
       "      <td>0.089804</td>\n",
       "      <td>variety__Riesling</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>0.082320</td>\n",
       "      <td>province__Virginia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>133</th>\n",
       "      <td>0.078675</td>\n",
       "      <td>variety__Rosé</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116</th>\n",
       "      <td>0.075374</td>\n",
       "      <td>variety__Merlot</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.072355</td>\n",
       "      <td>country__Argentina</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>0.070507</td>\n",
       "      <td>region__Santa Maria Valley</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>0.070317</td>\n",
       "      <td>region__Sta. Rita Hills</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>0.065146</td>\n",
       "      <td>region__Virginia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>0.060978</td>\n",
       "      <td>province__Other</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.060402</td>\n",
       "      <td>country__Germany</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0.059092</td>\n",
       "      <td>country__Spain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113</th>\n",
       "      <td>0.058961</td>\n",
       "      <td>variety__Grüner Veltliner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>0.055319</td>\n",
       "      <td>region__Bordeaux</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>0.054761</td>\n",
       "      <td>region__Anderson Valley</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>0.054476</td>\n",
       "      <td>province__New York</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93</th>\n",
       "      <td>0.054446</td>\n",
       "      <td>region__Walla Walla Valley (WA)</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     abs_coef                          feature\n",
       "0    0.879086                        log_price\n",
       "3    0.139820                 country__Austria\n",
       "55   0.135343               region__California\n",
       "4    0.101522                   country__Chile\n",
       "132  0.089804                variety__Riesling\n",
       "43   0.082320               province__Virginia\n",
       "133  0.078675                    variety__Rosé\n",
       "116  0.075374                  variety__Merlot\n",
       "1    0.072355               country__Argentina\n",
       "84   0.070507       region__Santa Maria Valley\n",
       "90   0.070317          region__Sta. Rita Hills\n",
       "92   0.065146                 region__Virginia\n",
       "33   0.060978                  province__Other\n",
       "6    0.060402                 country__Germany\n",
       "12   0.059092                   country__Spain\n",
       "113  0.058961        variety__Grüner Veltliner\n",
       "51   0.055319                 region__Bordeaux\n",
       "48   0.054761          region__Anderson Valley\n",
       "29   0.054476               province__New York\n",
       "93   0.054446  region__Walla Walla Valley (WA)"
      ]
     },
     "execution_count": 149,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "coef_df2.sort_values(by = 'abs_coef' ,  ascending=False).head(20)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# The top absolute value coefficients were are solid mix of all features. No obvious include/exclude of features on a 'next iteration' model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Plot the residuals"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 218,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (12,8))\n",
    "plt.xticks(list(range(80,101)))\n",
    "plt.yticks(list(range(80,101)))\n",
    "plt.xlabel('Actual Score', fontsize = 30)\n",
    "plt.ylabel('Predicted Score', fontsize = 30)\n",
    "plt.scatter(y_test,predictions,alpha=0.5)\n",
    "plt.grid()\n",
    "plt.title('Plot of Residuals')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Model is great at predicting... bad wine\n",
    "The majority of predictions fall below a score of 90. The model performed well and was good at predicting, but the distribution of predicted scores only predicts one wine above 94 points and very few above 93. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 194,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([88.43972358, 88.43972358, 88.43972358, ..., 88.43972358,\n",
       "       88.43972358, 88.43972358])"
      ]
     },
     "execution_count": 194,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create a NumPy array with the same shape as y_test.\n",
    "y_null = np.zeros_like(y_test, dtype=float)\n",
    "\n",
    "# Fill the array with the mean value of y_test.\n",
    "y_null.fill(y_test.mean())\n",
    "y_null"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# RMSE Null Prediction vs. Predicted Values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 195,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Null RMSE: 3.0454451262011286\n",
      "Predicted RMSE: 2.4712282525822364\n"
     ]
    }
   ],
   "source": [
    "print('Null RMSE:', np.sqrt(metrics.mean_squared_error(y_test, y_null)))\n",
    "print('Predicted RMSE:', np.sqrt(metrics.mean_squared_error(y_test,predictions)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
